// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Stack Matches Snapshot 1`] = `
{
  "Resources": {
    "CDKMetadata": {
      "Type": "AWS::CDK::Metadata",
      "Properties": {
        "Modules": "@aws-cdk/assert@1.144.0,@aws-cdk/assets@1.144.0,@aws-cdk/aws-acmpca@1.144.0,@aws-cdk/aws-apigateway@1.144.0,@aws-cdk/aws-applicationautoscaling@1.144.0,@aws-cdk/aws-autoscaling-common@1.144.0,@aws-cdk/aws-certificatemanager@1.144.0,@aws-cdk/aws-cloudformation@1.144.0,@aws-cdk/aws-cloudfront@1.144.0,@aws-cdk/aws-cloudwatch-actions@1.144.0,@aws-cdk/aws-cloudwatch@1.144.0,@aws-cdk/aws-codeguruprofiler@1.144.0,@aws-cdk/aws-dynamodb@1.144.0,@aws-cdk/aws-ec2@1.144.0,@aws-cdk/aws-ecr-assets@1.144.0,@aws-cdk/aws-ecr@1.144.0,@aws-cdk/aws-efs@1.144.0,@aws-cdk/aws-events@1.144.0,@aws-cdk/aws-iam@1.144.0,@aws-cdk/aws-kinesisfirehose@1.144.0,@aws-cdk/aws-kms@1.144.0,@aws-cdk/aws-lambda@1.144.0,@aws-cdk/aws-logs@1.144.0,@aws-cdk/aws-s3-assets@1.144.0,@aws-cdk/aws-s3-deployment@1.144.0,@aws-cdk/aws-s3@1.144.0,@aws-cdk/aws-sns@1.144.0,@aws-cdk/aws-sqs@1.144.0,@aws-cdk/aws-ssm@1.144.0,@aws-cdk/aws-stepfunctions@1.144.0,@aws-cdk/aws-wafv2@1.144.0,@aws-cdk/cfnspec@1.144.0,@aws-cdk/cloud-assembly-schema@1.144.0,@aws-cdk/cloudformation-diff@1.144.0,@aws-cdk/core@1.144.0,@aws-cdk/custom-resources@1.144.0,@aws-cdk/cx-api@1.144.0,@aws-cdk/lambda-layer-awscli@1.144.0,@aws-cdk/region-info@1.144.0,@moo-cdk/core@15.2.0,@moo-cdk/custom-resources@15.2.0,@moo-cdk/moo-apigateway@15.2.0,@moo-cdk/moo-certificatemanager@15.2.0,@moo-cdk/moo-cloudfront-patterns@15.2.0,@moo-cdk/moo-cloudfront@15.2.0,@moo-cdk/moo-cloudwatch@15.2.0,@moo-cdk/moo-dns@15.2.0,@moo-cdk/moo-dynamodb@15.2.0,@moo-cdk/moo-iam@15.2.0,@moo-cdk/moo-kinesisfirehose@15.2.0,@moo-cdk/moo-kms@15.2.0,@moo-cdk/moo-lambda@15.2.0,@moo-cdk/moo-logs@15.2.0,@moo-cdk/moo-s3@15.2.0,@moo-cdk/moo-sqs@15.2.0,@moo-cdk/moo-wafv2@15.2.0"
      },
      "Metadata": {
        "cdk:packages": [
          "@aws-cdk/assert@1.144.0",
          "@aws-cdk/assets@1.144.0",
          "@aws-cdk/aws-acmpca@1.144.0",
          "@aws-cdk/aws-apigateway@1.144.0",
          "@aws-cdk/aws-applicationautoscaling@1.144.0",
          "@aws-cdk/aws-autoscaling-common@1.144.0",
          "@aws-cdk/aws-certificatemanager@1.144.0",
          "@aws-cdk/aws-cloudformation@1.144.0",
          "@aws-cdk/aws-cloudfront@1.144.0",
          "@aws-cdk/aws-cloudwatch-actions@1.144.0",
          "@aws-cdk/aws-cloudwatch@1.144.0",
          "@aws-cdk/aws-codeguruprofiler@1.144.0",
          "@aws-cdk/aws-dynamodb@1.144.0",
          "@aws-cdk/aws-ec2@1.144.0",
          "@aws-cdk/aws-ecr-assets@1.144.0",
          "@aws-cdk/aws-ecr@1.144.0",
          "@aws-cdk/aws-efs@1.144.0",
          "@aws-cdk/aws-events@1.144.0",
          "@aws-cdk/aws-iam@1.144.0",
          "@aws-cdk/aws-kinesisfirehose@1.144.0",
          "@aws-cdk/aws-kms@1.144.0",
          "@aws-cdk/aws-lambda@1.144.0",
          "@aws-cdk/aws-logs@1.144.0",
          "@aws-cdk/aws-s3-assets@1.144.0",
          "@aws-cdk/aws-s3-deployment@1.144.0",
          "@aws-cdk/aws-s3@1.144.0",
          "@aws-cdk/aws-sns@1.144.0",
          "@aws-cdk/aws-sqs@1.144.0",
          "@aws-cdk/aws-ssm@1.144.0",
          "@aws-cdk/aws-stepfunctions@1.144.0",
          "@aws-cdk/aws-wafv2@1.144.0",
          "@aws-cdk/cfnspec@1.144.0",
          "@aws-cdk/cloud-assembly-schema@1.144.0",
          "@aws-cdk/cloudformation-diff@1.144.0",
          "@aws-cdk/core@1.144.0",
          "@aws-cdk/custom-resources@1.144.0",
          "@aws-cdk/cx-api@1.144.0",
          "@aws-cdk/lambda-layer-awscli@1.144.0",
          "@aws-cdk/region-info@1.144.0",
          "@moo-cdk/core@15.2.0",
          "@moo-cdk/custom-resources@15.2.0",
          "@moo-cdk/moo-apigateway@15.2.0",
          "@moo-cdk/moo-certificatemanager@15.2.0",
          "@moo-cdk/moo-cloudfront-patterns@15.2.0",
          "@moo-cdk/moo-cloudfront@15.2.0",
          "@moo-cdk/moo-cloudwatch@15.2.0",
          "@moo-cdk/moo-dns@15.2.0",
          "@moo-cdk/moo-dynamodb@15.2.0",
          "@moo-cdk/moo-iam@15.2.0",
          "@moo-cdk/moo-kinesisfirehose@15.2.0",
          "@moo-cdk/moo-kms@15.2.0",
          "@moo-cdk/moo-lambda@15.2.0",
          "@moo-cdk/moo-logs@15.2.0",
          "@moo-cdk/moo-s3@15.2.0",
          "@moo-cdk/moo-sqs@15.2.0",
          "@moo-cdk/moo-wafv2@15.2.0"
        ]
      }
    },
    "WebBucket12880F5B": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        },
        "BucketName": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "ASI"
              },
              "-",
              {
                "Ref": "ProjectName"
              },
              "-",
              {
                "Ref": "Environment"
              },
              "-",
              {
                "Ref": "AWS::AccountId"
              },
              "-",
              {
                "Fn::FindInMap": [
                  "RegionMappings",
                  {
                    "Ref": "AWS::Region"
                  },
                  "shortCode"
                ]
              },
              {
                "Fn::If": [
                  "NamingSuffixSet",
                  {
                    "Fn::Join": [
                      "",
                      [
                        "-",
                        {
                          "Ref": "NamingSuffix"
                        }
                      ]
                    ]
                  },
                  ""
                ]
              }
            ]
          ]
        },
        "LoggingConfiguration": {
          "DestinationBucketName": {
            "Fn::Join": [
              "",
              [
                "s3accesslogs-",
                {
                  "Ref": "AWS::AccountId"
                },
                "-",
                {
                  "Ref": "AWS::Region"
                }
              ]
            ]
          },
          "LogFilePrefix": {
            "Fn::Join": [
              "",
              [
                {
                  "Ref": "ASI"
                },
                "-",
                {
                  "Ref": "ProjectName"
                },
                "-",
                {
                  "Ref": "Environment"
                },
                "-",
                {
                  "Ref": "AWS::AccountId"
                },
                "-",
                {
                  "Fn::FindInMap": [
                    "RegionMappings",
                    {
                      "Ref": "AWS::Region"
                    },
                    "shortCode"
                  ]
                },
                {
                  "Fn::If": [
                    "NamingSuffixSet",
                    {
                      "Fn::Join": [
                        "",
                        [
                          "-",
                          {
                            "Ref": "NamingSuffix"
                          }
                        ]
                      ]
                    },
                    ""
                  ]
                },
                "/"
              ]
            ]
          }
        },
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true
        },
        "Tags": [
          {
            "Key": "asiName",
            "Value": "ABC"
          },
          {
            "Key": "aws-cdk:auto-delete-objects",
            "Value": "true"
          },
          {
            "Key": "aws-cdk:cr-owned:81e0bea5",
            "Value": "true"
          },
          {
            "Key": "projectName",
            "Value": "testProject"
          }
        ],
        "VersioningConfiguration": {
          "Status": "Enabled"
        }
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete"
    },
    "WebBucketPolicy95D08FAA": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "WebBucket12880F5B"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*"
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                    "Arn"
                  ]
                }
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "WebBucket12880F5B",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "WebBucket12880F5B",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": false
                }
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*"
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "WebBucket12880F5B",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "WebBucket12880F5B",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*"
              ],
              "Effect": "Allow",
              "Principal": {
                "CanonicalUser": {
                  "Fn::GetAtt": [
                    "WebBucketIdentityF4F2C8B6",
                    "S3CanonicalUserId"
                  ]
                }
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "WebBucket12880F5B",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "WebBucket12880F5B",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": "s3:GetObject",
              "Effect": "Allow",
              "Principal": {
                "CanonicalUser": {
                  "Fn::GetAtt": [
                    "WebBucketIdentityF4F2C8B6",
                    "S3CanonicalUserId"
                  ]
                }
              },
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "WebBucket12880F5B",
                        "Arn"
                      ]
                    },
                    "/*"
                  ]
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        }
      }
    },
    "WebBucketAutoDeleteObjectsCustomResource9C1A079F": {
      "Type": "Custom::S3AutoDeleteObjects",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
            "Arn"
          ]
        },
        "BucketName": {
          "Ref": "WebBucket12880F5B"
        }
      },
      "DependsOn": [
        "WebBucketPolicy95D08FAA"
      ],
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete"
    },
    "WebBucketBucketCleanupLambdaRoleDF6F4763": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ],
        "Tags": [
          {
            "Key": "asiName",
            "Value": "ABC"
          },
          {
            "Key": "aws-cdk:cr-owned:81e0bea5",
            "Value": "true"
          },
          {
            "Key": "projectName",
            "Value": "testProject"
          }
        ]
      }
    },
    "WebBucketBucketCleanupLambdaRoleDefaultPolicy4046A888": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:List*",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "WebBucket12880F5B",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "WebBucket12880F5B",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords"
              ],
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "WebBucketBucketCleanupLambdaRoleDefaultPolicy4046A888",
        "Roles": [
          {
            "Ref": "WebBucketBucketCleanupLambdaRoleDF6F4763"
          }
        ]
      }
    },
    "WebBucketBucketCleanupLambdaB1B731BD": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParameters-CDK_HASH_REMOVED"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters-CDK_HASH_REMOVED"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters-CDK_HASH_REMOVED"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "WebBucketBucketCleanupLambdaRoleDF6F4763",
            "Arn"
          ]
        },
        "Handler": "handler-bundle.handler",
        "Runtime": "nodejs14.x",
        "Tags": [
          {
            "Key": "asiName",
            "Value": "ABC"
          },
          {
            "Key": "aws-cdk:cr-owned:81e0bea5",
            "Value": "true"
          },
          {
            "Key": "projectName",
            "Value": "testProject"
          }
        ],
        "Timeout": 900,
        "TracingConfig": {
          "Mode": "Active"
        }
      },
      "DependsOn": [
        "WebBucketBucketCleanupLambdaRoleDefaultPolicy4046A888",
        "WebBucketBucketCleanupLambdaRoleDF6F4763"
      ]
    },
    "WebBucketBucketCleanupLambdaLGA82438B2": {
      "Type": "Custom::MooLogGroup",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "MooLogGroupProviderframeworkonEventFECEF8B7",
            "Arn"
          ]
        },
        "logGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "WebBucketBucketCleanupLambdaB1B731BD"
              }
            ]
          ]
        },
        "retention": 365,
        "logGroupEncryption": true,
        "kmsKeyAliasName": "alias/moo/logs/v1"
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain"
    },
    "WebBucketBucketCleanupProviderframeworkonEventServiceRoleB2018B6C": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ],
        "Tags": [
          {
            "Key": "asiName",
            "Value": "ABC"
          },
          {
            "Key": "aws-cdk:cr-owned:81e0bea5",
            "Value": "true"
          },
          {
            "Key": "projectName",
            "Value": "testProject"
          }
        ]
      }
    },
    "WebBucketBucketCleanupProviderframeworkonEventServiceRoleDefaultPolicyBAA583EC": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "WebBucketBucketCleanupLambdaB1B731BD",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "WebBucketBucketCleanupProviderframeworkonEventServiceRoleDefaultPolicyBAA583EC",
        "Roles": [
          {
            "Ref": "WebBucketBucketCleanupProviderframeworkonEventServiceRoleB2018B6C"
          }
        ]
      }
    },
    "WebBucketBucketCleanupProviderframeworkonEvent9B49C7C7": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParameters-CDK_HASH_REMOVED"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters-CDK_HASH_REMOVED"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters-CDK_HASH_REMOVED"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "WebBucketBucketCleanupProviderframeworkonEventServiceRoleB2018B6C",
            "Arn"
          ]
        },
        "Description": "AWS CDK resource provider framework - onEvent (MyTestStack/WebBucket/BucketCleanupProvider)",
        "Environment": {
          "Variables": {
            "USER_ON_EVENT_FUNCTION_ARN": {
              "Fn::GetAtt": [
                "WebBucketBucketCleanupLambdaB1B731BD",
                "Arn"
              ]
            }
          }
        },
        "Handler": "framework.onEvent",
        "Runtime": "nodejs12.x",
        "Tags": [
          {
            "Key": "asiName",
            "Value": "ABC"
          },
          {
            "Key": "aws-cdk:cr-owned:81e0bea5",
            "Value": "true"
          },
          {
            "Key": "projectName",
            "Value": "testProject"
          }
        ],
        "Timeout": 900
      },
      "DependsOn": [
        "WebBucketBucketCleanupProviderframeworkonEventServiceRoleDefaultPolicyBAA583EC",
        "WebBucketBucketCleanupProviderframeworkonEventServiceRoleB2018B6C"
      ]
    },
    "WebBucketBucketCleanup8485EECB": {
      "Type": "Custom::BucketCleanup",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "WebBucketBucketCleanupProviderframeworkonEvent9B49C7C7",
            "Arn"
          ]
        },
        "BucketName": {
          "Ref": "WebBucket12880F5B"
        }
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete"
    },
    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ]
        },
        "ManagedPolicyArns": [
          {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
          }
        ]
      }
    },
    "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParameters-CDK_HASH_REMOVED"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters-CDK_HASH_REMOVED"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters-CDK_HASH_REMOVED"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Timeout": 900,
        "MemorySize": 128,
        "Handler": "__entrypoint__.handler",
        "Role": {
          "Fn::GetAtt": [
            "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
            "Arn"
          ]
        },
        "Runtime": "nodejs12.x",
        "Description": {
          "Fn::Join": [
            "",
            [
              "Lambda function for auto-deleting objects in ",
              {
                "Ref": "WebBucket12880F5B"
              },
              " S3 bucket."
            ]
          ]
        }
      },
      "DependsOn": [
        "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092"
      ]
    },
    "SingletonLambda63f1a138c5f44c3ab171644e7171bc1bServiceRoleA596A4D8": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ],
        "Tags": [
          {
            "Key": "asiName",
            "Value": "ABC"
          },
          {
            "Key": "projectName",
            "Value": "testProject"
          }
        ]
      }
    },
    "SingletonLambda63f1a138c5f44c3ab171644e7171bc1bServiceRoleDefaultPolicy77D827BB": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "kms:ListAliases",
                "kms:DescribeKey",
                "kms:CreateKey",
                "kms:CreateAlias",
                "kms:ScheduleKeyDeletion",
                "kms:GetKeyRotationStatus",
                "kms:EnableKeyRotation"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "logs:Describe*",
                "logs:AssociateKmsKey",
                "logs:PutRetentionPolicy",
                "logs:DeleteLogGroup"
              ],
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "SingletonLambda63f1a138c5f44c3ab171644e7171bc1bServiceRoleDefaultPolicy77D827BB",
        "Roles": [
          {
            "Ref": "SingletonLambda63f1a138c5f44c3ab171644e7171bc1bServiceRoleA596A4D8"
          }
        ]
      }
    },
    "SingletonLambda63f1a138c5f44c3ab171644e7171bc1b978A146B": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParameters-CDK_HASH_REMOVED"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters-CDK_HASH_REMOVED"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters-CDK_HASH_REMOVED"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "SingletonLambda63f1a138c5f44c3ab171644e7171bc1bServiceRoleA596A4D8",
            "Arn"
          ]
        },
        "Description": "Cloud Formation Custom Resource to create and delete MooLogGroup",
        "Handler": "handler-bundle.handler",
        "Runtime": "nodejs14.x",
        "Tags": [
          {
            "Key": "asiName",
            "Value": "ABC"
          },
          {
            "Key": "projectName",
            "Value": "testProject"
          }
        ],
        "Timeout": 900,
        "TracingConfig": {
          "Mode": "Active"
        }
      },
      "DependsOn": [
        "SingletonLambda63f1a138c5f44c3ab171644e7171bc1bServiceRoleDefaultPolicy77D827BB",
        "SingletonLambda63f1a138c5f44c3ab171644e7171bc1bServiceRoleA596A4D8"
      ]
    },
    "SingletonLambda63f1a138c5f44c3ab171644e7171bc1bLogRetention6D23C8C4": {
      "Type": "Custom::LogRetention",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn"
          ]
        },
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "SingletonLambda63f1a138c5f44c3ab171644e7171bc1b978A146B"
              }
            ]
          ]
        },
        "RetentionInDays": 90
      }
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ],
        "Tags": [
          {
            "Key": "asiName",
            "Value": "ABC"
          },
          {
            "Key": "projectName",
            "Value": "testProject"
          }
        ]
      }
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:PutRetentionPolicy",
                "logs:DeleteRetentionPolicy"
              ],
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "Roles": [
          {
            "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB"
          }
        ]
      }
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Handler": "index.handler",
        "Runtime": "nodejs14.x",
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParameters-CDK_HASH_REMOVED"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters-CDK_HASH_REMOVED"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters-CDK_HASH_REMOVED"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
            "Arn"
          ]
        },
        "Tags": [
          {
            "Key": "asiName",
            "Value": "ABC"
          },
          {
            "Key": "projectName",
            "Value": "testProject"
          }
        ]
      },
      "DependsOn": [
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB"
      ]
    },
    "MooLogGroupProviderframeworkonEventServiceRoleF86CFCCF": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ],
        "Tags": [
          {
            "Key": "asiName",
            "Value": "ABC"
          },
          {
            "Key": "projectName",
            "Value": "testProject"
          }
        ]
      }
    },
    "MooLogGroupProviderframeworkonEventServiceRoleDefaultPolicyE7E96144": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "SingletonLambda63f1a138c5f44c3ab171644e7171bc1b978A146B",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "MooLogGroupProviderframeworkonEventServiceRoleDefaultPolicyE7E96144",
        "Roles": [
          {
            "Ref": "MooLogGroupProviderframeworkonEventServiceRoleF86CFCCF"
          }
        ]
      }
    },
    "MooLogGroupProviderframeworkonEventFECEF8B7": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParameters-CDK_HASH_REMOVED"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters-CDK_HASH_REMOVED"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters-CDK_HASH_REMOVED"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "MooLogGroupProviderframeworkonEventServiceRoleF86CFCCF",
            "Arn"
          ]
        },
        "Description": "AWS CDK resource provider framework - onEvent (MyTestStack/MooLogGroupProvider/Provider)",
        "Environment": {
          "Variables": {
            "USER_ON_EVENT_FUNCTION_ARN": {
              "Fn::GetAtt": [
                "SingletonLambda63f1a138c5f44c3ab171644e7171bc1b978A146B",
                "Arn"
              ]
            }
          }
        },
        "Handler": "framework.onEvent",
        "Runtime": "nodejs12.x",
        "Tags": [
          {
            "Key": "asiName",
            "Value": "ABC"
          },
          {
            "Key": "projectName",
            "Value": "testProject"
          }
        ],
        "Timeout": 900
      },
      "DependsOn": [
        "MooLogGroupProviderframeworkonEventServiceRoleDefaultPolicyE7E96144",
        "MooLogGroupProviderframeworkonEventServiceRoleF86CFCCF"
      ]
    },
    "MooLogGroupProviderframeworkonEventLogRetention36145ED1": {
      "Type": "Custom::LogRetention",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn"
          ]
        },
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "MooLogGroupProviderframeworkonEventFECEF8B7"
              }
            ]
          ]
        },
        "RetentionInDays": 90
      }
    },
    "WebBucketIdentityF4F2C8B6": {
      "Type": "AWS::CloudFront::CloudFrontOriginAccessIdentity",
      "Properties": {
        "CloudFrontOriginAccessIdentityConfig": {
          "Comment": "Allows CloudFront to reach the bucket"
        }
      }
    },
    "ExampleLambdaRole137A1805": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ],
        "RoleName": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "ASI"
              },
              "-",
              {
                "Ref": "ProjectName"
              },
              "-",
              {
                "Ref": "Environment"
              },
              "-",
              {
                "Fn::FindInMap": [
                  "RegionMappings",
                  {
                    "Ref": "AWS::Region"
                  },
                  "shortCode"
                ]
              },
              "-functionRole",
              {
                "Fn::If": [
                  "NamingSuffixSet",
                  {
                    "Fn::Join": [
                      "",
                      [
                        "-",
                        {
                          "Ref": "NamingSuffix"
                        }
                      ]
                    ]
                  },
                  ""
                ]
              }
            ]
          ]
        },
        "Tags": [
          {
            "Key": "asiName",
            "Value": "ABC"
          },
          {
            "Key": "projectName",
            "Value": "testProject"
          }
        ]
      }
    },
    "ExampleLambdaRoleDefaultPolicy07959AAC": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords"
              ],
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "ExampleLambdaRoleDefaultPolicy07959AAC",
        "Roles": [
          {
            "Ref": "ExampleLambdaRole137A1805"
          }
        ]
      }
    },
    "ExampleLambdaF227E16E": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParameters-CDK_HASH_REMOVED"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters-CDK_HASH_REMOVED"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters-CDK_HASH_REMOVED"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "ExampleLambdaRole137A1805",
            "Arn"
          ]
        },
        "FunctionName": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "ASI"
              },
              "-",
              {
                "Ref": "ProjectName"
              },
              "-",
              {
                "Ref": "Environment"
              },
              {
                "Fn::If": [
                  "NamingSuffixSet",
                  {
                    "Fn::Join": [
                      "",
                      [
                        "-",
                        {
                          "Ref": "NamingSuffix"
                        }
                      ]
                    ]
                  },
                  ""
                ]
              }
            ]
          ]
        },
        "Handler": "hello-world.handler",
        "Runtime": "nodejs14.x",
        "Tags": [
          {
            "Key": "asiName",
            "Value": "ABC"
          },
          {
            "Key": "projectName",
            "Value": "testProject"
          }
        ],
        "TracingConfig": {
          "Mode": "Active"
        }
      },
      "DependsOn": [
        "ExampleLambdaRoleDefaultPolicy07959AAC",
        "ExampleLambdaRole137A1805"
      ]
    },
    "ExampleLambdaLambdaDefaultAlarm60F52AB7": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ComparisonOperator": "GreaterThanThreshold",
        "EvaluationPeriods": 1,
        "AlarmActions": [
          {
            "Fn::Join": [
              "",
              [
                "arn:aws:sns:",
                {
                  "Ref": "AWS::Region"
                },
                ":",
                {
                  "Ref": "AWS::AccountId"
                },
                ":CriticalIncidentEventTopic"
              ]
            ]
          }
        ],
        "AlarmDescription": {
          "Fn::Join": [
            "",
            [
              "Lambda ",
              {
                "Ref": "ExampleLambdaF227E16E"
              },
              " has sent 0 or greater\\n      percentage of errors to successful completions in the last 60 seconds.\\n      This is usually an indication of a sustained failure of a lambda function.\\n      See {https://confluence.mutualofomaha.com/confluence/x/4AAmH} for more information."
            ]
          ]
        },
        "AlarmName": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "ExampleLambdaF227E16E"
              },
              "-error-rate"
            ]
          ]
        },
        "Metrics": [
          {
            "Expression": "(errors/invocations)*100",
            "Id": "expr_1"
          },
          {
            "Id": "errors",
            "MetricStat": {
              "Metric": {
                "Dimensions": [
                  {
                    "Name": "FunctionName",
                    "Value": {
                      "Ref": "ExampleLambdaF227E16E"
                    }
                  }
                ],
                "MetricName": "Errors",
                "Namespace": "AWS/Lambda"
              },
              "Period": 300,
              "Stat": "Sum"
            },
            "ReturnData": false
          },
          {
            "Id": "invocations",
            "MetricStat": {
              "Metric": {
                "Dimensions": [
                  {
                    "Name": "FunctionName",
                    "Value": {
                      "Ref": "ExampleLambdaF227E16E"
                    }
                  }
                ],
                "MetricName": "Invocations",
                "Namespace": "AWS/Lambda"
              },
              "Period": 300,
              "Stat": "Sum"
            },
            "ReturnData": false
          }
        ],
        "Threshold": 0,
        "TreatMissingData": "ignore"
      }
    },
    "ExampleLambdaLG": {
      "Type": "Custom::MooLogGroup",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "MooLogGroupProviderframeworkonEventFECEF8B7",
            "Arn"
          ]
        },
        "logGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "ExampleLambdaF227E16E"
              }
            ]
          ]
        },
        "retention": 365,
        "logGroupEncryption": true,
        "kmsKeyAliasName": "alias/moo/logs/v1"
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain"
    },
    "RegionalApi3AC391EF": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "EndpointConfiguration": {
          "Types": [
            "REGIONAL"
          ]
        },
        "MinimumCompressionSize": 131072,
        "Name": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "ASI"
              },
              "-",
              {
                "Ref": "ProjectName"
              },
              "-",
              {
                "Ref": "Environment"
              },
              {
                "Fn::If": [
                  "NamingSuffixSet",
                  {
                    "Fn::Join": [
                      "",
                      [
                        "-",
                        {
                          "Ref": "NamingSuffix"
                        }
                      ]
                    ]
                  },
                  ""
                ]
              }
            ]
          ]
        },
        "Tags": [
          {
            "Key": "asiName",
            "Value": "ABC"
          },
          {
            "Key": "projectName",
            "Value": "testProject"
          }
        ]
      }
    },
    "RegionalApiCloudWatchRole9CF7CDB2": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
              ]
            ]
          }
        ],
        "Tags": [
          {
            "Key": "asiName",
            "Value": "ABC"
          },
          {
            "Key": "projectName",
            "Value": "testProject"
          }
        ]
      }
    },
    "RegionalApiAccount2945541F": {
      "Type": "AWS::ApiGateway::Account",
      "Properties": {
        "CloudWatchRoleArn": {
          "Fn::GetAtt": [
            "RegionalApiCloudWatchRole9CF7CDB2",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "RegionalApi3AC391EF"
      ]
    },
    "RegionalApihealthA4067BD5": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "RegionalApi3AC391EF",
            "RootResourceId"
          ]
        },
        "PathPart": "health",
        "RestApiId": {
          "Ref": "RegionalApi3AC391EF"
        }
      }
    },
    "RegionalApihealthGET8C470D6E": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "ResourceId": {
          "Ref": "RegionalApihealthA4067BD5"
        },
        "RestApiId": {
          "Ref": "RegionalApi3AC391EF"
        },
        "ApiKeyRequired": true,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationResponses": [
            {
              "StatusCode": "200"
            }
          ],
          "PassthroughBehavior": "NEVER",
          "RequestTemplates": {
            "application/json": "{ \\"statusCode\\": 200 }"
          },
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "StatusCode": "200"
          }
        ]
      }
    },
    "RegionalApihelloworldB63E9C28": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "RegionalApi3AC391EF",
            "RootResourceId"
          ]
        },
        "PathPart": "hello-world",
        "RestApiId": {
          "Ref": "RegionalApi3AC391EF"
        }
      }
    },
    "RegionalApihelloworldGETApiPermissionMyTestStackRegionalApi7F45B4FAGEThelloworldFF091B7E": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "ExampleLambdaF227E16E",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:us-east-1:",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "RegionalApi3AC391EF"
              },
              "/",
              {
                "Ref": "RegionalApidefaultStageE594CEF8"
              },
              "/GET/hello-world"
            ]
          ]
        }
      }
    },
    "RegionalApihelloworldGETApiPermissionTestMyTestStackRegionalApi7F45B4FAGEThelloworld4BC438E8": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "ExampleLambdaF227E16E",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:us-east-1:",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "RegionalApi3AC391EF"
              },
              "/test-invoke-stage/GET/hello-world"
            ]
          ]
        }
      }
    },
    "RegionalApihelloworldGET55A7C7C9": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "ResourceId": {
          "Ref": "RegionalApihelloworldB63E9C28"
        },
        "RestApiId": {
          "Ref": "RegionalApi3AC391EF"
        },
        "ApiKeyRequired": true,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "ExampleLambdaF227E16E",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      }
    },
    "RegionalApiusers3E724D61": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "RegionalApi3AC391EF",
            "RootResourceId"
          ]
        },
        "PathPart": "users",
        "RestApiId": {
          "Ref": "RegionalApi3AC391EF"
        }
      }
    },
    "RegionalApiusersGETApiPermissionMyTestStackRegionalApi7F45B4FAGETusers2F3878B3": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "GetUsersLambda4ACBBAFD",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:us-east-1:",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "RegionalApi3AC391EF"
              },
              "/",
              {
                "Ref": "RegionalApidefaultStageE594CEF8"
              },
              "/GET/users"
            ]
          ]
        }
      }
    },
    "RegionalApiusersGETApiPermissionTestMyTestStackRegionalApi7F45B4FAGETusersB45F913F": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "GetUsersLambda4ACBBAFD",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:us-east-1:",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "RegionalApi3AC391EF"
              },
              "/test-invoke-stage/GET/users"
            ]
          ]
        }
      }
    },
    "RegionalApiusersGETFB61EAE6": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "ResourceId": {
          "Ref": "RegionalApiusers3E724D61"
        },
        "RestApiId": {
          "Ref": "RegionalApi3AC391EF"
        },
        "ApiKeyRequired": true,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "GetUsersLambda4ACBBAFD",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      }
    },
    "RegionalApiusersPOSTApiPermissionMyTestStackRegionalApi7F45B4FAPOSTusers9F495DA2": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "AddUserLambda610F123B",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:us-east-1:",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "RegionalApi3AC391EF"
              },
              "/",
              {
                "Ref": "RegionalApidefaultStageE594CEF8"
              },
              "/POST/users"
            ]
          ]
        }
      }
    },
    "RegionalApiusersPOSTApiPermissionTestMyTestStackRegionalApi7F45B4FAPOSTusersA9FB18E9": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "AddUserLambda610F123B",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:us-east-1:",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "RegionalApi3AC391EF"
              },
              "/test-invoke-stage/POST/users"
            ]
          ]
        }
      }
    },
    "RegionalApiusersPOST263BB707": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "POST",
        "ResourceId": {
          "Ref": "RegionalApiusers3E724D61"
        },
        "RestApiId": {
          "Ref": "RegionalApi3AC391EF"
        },
        "ApiKeyRequired": true,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "AddUserLambda610F123B",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      }
    },
    "RegionalApiRegionalApideploymentE8833D421191f783f8dccf94dc0a19db5e804506": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "RestApiId": {
          "Ref": "RegionalApi3AC391EF"
        },
        "Description": "Automatically created by the RestApi construct"
      },
      "DependsOn": [
        "RegionalApihealthGET8C470D6E",
        "RegionalApihealthA4067BD5",
        "RegionalApihelloworldGET55A7C7C9",
        "RegionalApihelloworldB63E9C28",
        "RegionalApiusersGETFB61EAE6",
        "RegionalApiusersPOST263BB707",
        "RegionalApiusers3E724D61"
      ]
    },
    "RegionalApidefaultStagelogC780E237": {
      "Type": "Custom::MooLogGroup",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "MooLogGroupProviderframeworkonEventFECEF8B7",
            "Arn"
          ]
        },
        "logGroupName": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "ASI"
              },
              "-",
              {
                "Ref": "ProjectName"
              },
              "-",
              {
                "Ref": "Environment"
              },
              "-defaultStage",
              {
                "Fn::If": [
                  "NamingSuffixSet",
                  {
                    "Fn::Join": [
                      "",
                      [
                        "-",
                        {
                          "Ref": "NamingSuffix"
                        }
                      ]
                    ]
                  },
                  ""
                ]
              }
            ]
          ]
        },
        "retention": 365,
        "logGroupEncryption": true,
        "kmsKeyAliasName": "alias/moo/logs/v1"
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain"
    },
    "RegionalApidefaultStageE594CEF8": {
      "Type": "AWS::ApiGateway::Stage",
      "Properties": {
        "RestApiId": {
          "Ref": "RegionalApi3AC391EF"
        },
        "AccessLogSetting": {
          "DestinationArn": {
            "Fn::GetAtt": [
              "RegionalApidefaultStagelogC780E237",
              "Arn"
            ]
          },
          "Format": "$context.identity.sourceIp $context.identity.caller $context.identity.user [$context.requestTime] \\"$context.httpMethod $context.resourcePath $context.protocol\\" $context.status $context.responseLength $context.requestId"
        },
        "DeploymentId": {
          "Ref": "RegionalApiRegionalApideploymentE8833D421191f783f8dccf94dc0a19db5e804506"
        },
        "MethodSettings": [
          {
            "DataTraceEnabled": false,
            "HttpMethod": "*",
            "LoggingLevel": "INFO",
            "MetricsEnabled": true,
            "ResourcePath": "/*"
          }
        ],
        "StageName": "api",
        "Tags": [
          {
            "Key": "asiName",
            "Value": "ABC"
          },
          {
            "Key": "projectName",
            "Value": "testProject"
          }
        ],
        "TracingEnabled": true
      },
      "DependsOn": [
        "RegionalApiAccount2945541F"
      ]
    },
    "RegionalApidefaultStageWebACLWebACLIpSet9E03A8FD": {
      "Type": "AWS::WAFv2::IPSet",
      "Properties": {
        "Addresses": {
          "Fn::If": [
            "isClass1Account",
            [
              "0.0.0.0/1",
              "128.0.0.0/1"
            ],
            [
              "170.31.0.0/16",
              "3.223.151.116/32",
              "3.223.138.144/32",
              "44.240.254.241/32",
              "54.190.188.89/32",
              "3.226.219.72/32",
              "34.203.21.245/32",
              "54.68.86.27/32",
              "52.13.72.236/32"
            ]
          ]
        },
        "IPAddressVersion": "IPV4",
        "Scope": "REGIONAL",
        "Name": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "ASI"
              },
              "-",
              {
                "Ref": "ProjectName"
              },
              "-",
              {
                "Ref": "Environment"
              },
              "-apiwaf",
              {
                "Fn::If": [
                  "NamingSuffixSet",
                  {
                    "Fn::Join": [
                      "",
                      [
                        "-",
                        {
                          "Ref": "NamingSuffix"
                        }
                      ]
                    ]
                  },
                  ""
                ]
              },
              "-ipset"
            ]
          ]
        },
        "Tags": [
          {
            "Key": "asiName",
            "Value": "ABC"
          },
          {
            "Key": "projectName",
            "Value": "testProject"
          },
          {
            "Key": "SetType",
            "Value": "DefaultIPv4"
          }
        ]
      },
      "DependsOn": [
        "RegionalApiAccount2945541F"
      ]
    },
    "RegionalApidefaultStageWebACLWebACLIpV6Set2C4038CB": {
      "Type": "AWS::WAFv2::IPSet",
      "Properties": {
        "Addresses": {
          "Fn::If": [
            "isClass1Account",
            [
              "::/1",
              "8000::/1"
            ],
            []
          ]
        },
        "IPAddressVersion": "IPV6",
        "Scope": "REGIONAL",
        "Name": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "ASI"
              },
              "-",
              {
                "Ref": "ProjectName"
              },
              "-",
              {
                "Ref": "Environment"
              },
              "-apiwaf",
              {
                "Fn::If": [
                  "NamingSuffixSet",
                  {
                    "Fn::Join": [
                      "",
                      [
                        "-",
                        {
                          "Ref": "NamingSuffix"
                        }
                      ]
                    ]
                  },
                  ""
                ]
              },
              "-ipv6set"
            ]
          ]
        },
        "Tags": [
          {
            "Key": "asiName",
            "Value": "ABC"
          },
          {
            "Key": "projectName",
            "Value": "testProject"
          },
          {
            "Key": "SetType",
            "Value": "DefaultIPv6"
          }
        ]
      },
      "DependsOn": [
        "RegionalApiAccount2945541F",
        "RegionalApidefaultStageWebACLWebACLIpSet9E03A8FD"
      ]
    },
    "RegionalApidefaultStageWebACLF92404C3": {
      "Type": "AWS::WAFv2::WebACL",
      "Properties": {
        "DefaultAction": {
          "Allow": {}
        },
        "Scope": "REGIONAL",
        "VisibilityConfig": {
          "CloudWatchMetricsEnabled": true,
          "MetricName": {
            "Fn::Join": [
              "",
              [
                {
                  "Ref": "ASI"
                },
                "-",
                {
                  "Ref": "ProjectName"
                },
                "-",
                {
                  "Ref": "Environment"
                },
                "-apiwaf",
                {
                  "Fn::If": [
                    "NamingSuffixSet",
                    {
                      "Fn::Join": [
                        "",
                        [
                          "-",
                          {
                            "Ref": "NamingSuffix"
                          }
                        ]
                      ]
                    },
                    ""
                  ]
                },
                "-metric"
              ]
            ]
          },
          "SampledRequestsEnabled": true
        },
        "Name": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "ASI"
              },
              "-",
              {
                "Ref": "ProjectName"
              },
              "-",
              {
                "Ref": "Environment"
              },
              "-apiwaf",
              {
                "Fn::If": [
                  "NamingSuffixSet",
                  {
                    "Fn::Join": [
                      "",
                      [
                        "-",
                        {
                          "Ref": "NamingSuffix"
                        }
                      ]
                    ]
                  },
                  ""
                ]
              }
            ]
          ]
        },
        "Rules": [
          {
            "Action": {
              "Block": {}
            },
            "Name": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "ASI"
                  },
                  "-",
                  {
                    "Ref": "ProjectName"
                  },
                  "-",
                  {
                    "Ref": "Environment"
                  },
                  "-apiwaf",
                  {
                    "Fn::If": [
                      "NamingSuffixSet",
                      {
                        "Fn::Join": [
                          "",
                          [
                            "-",
                            {
                              "Ref": "NamingSuffix"
                            }
                          ]
                        ]
                      },
                      ""
                    ]
                  },
                  "-ipset"
                ]
              ]
            },
            "Priority": 0,
            "Statement": {
              "NotStatement": {
                "Statement": {
                  "OrStatement": {
                    "Statements": [
                      {
                        "IPSetReferenceStatement": {
                          "Arn": {
                            "Fn::GetAtt": [
                              "RegionalApidefaultStageWebACLWebACLIpSet9E03A8FD",
                              "Arn"
                            ]
                          }
                        }
                      },
                      {
                        "IPSetReferenceStatement": {
                          "Arn": {
                            "Fn::GetAtt": [
                              "RegionalApidefaultStageWebACLWebACLIpV6Set2C4038CB",
                              "Arn"
                            ]
                          }
                        }
                      }
                    ]
                  }
                }
              }
            },
            "VisibilityConfig": {
              "CloudWatchMetricsEnabled": true,
              "MetricName": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Ref": "ASI"
                    },
                    "-",
                    {
                      "Ref": "ProjectName"
                    },
                    "-",
                    {
                      "Ref": "Environment"
                    },
                    "-apiwaf",
                    {
                      "Fn::If": [
                        "NamingSuffixSet",
                        {
                          "Fn::Join": [
                            "",
                            [
                              "-",
                              {
                                "Ref": "NamingSuffix"
                              }
                            ]
                          ]
                        },
                        ""
                      ]
                    },
                    "-ipset-metric"
                  ]
                ]
              },
              "SampledRequestsEnabled": true
            }
          },
          {
            "Action": {
              "Block": {}
            },
            "Name": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "ASI"
                  },
                  "-",
                  {
                    "Ref": "ProjectName"
                  },
                  "-",
                  {
                    "Ref": "Environment"
                  },
                  "-apiwaf",
                  {
                    "Fn::If": [
                      "NamingSuffixSet",
                      {
                        "Fn::Join": [
                          "",
                          [
                            "-",
                            {
                              "Ref": "NamingSuffix"
                            }
                          ]
                        ]
                      },
                      ""
                    ]
                  },
                  "-blocked-countries"
                ]
              ]
            },
            "Priority": 1,
            "Statement": {
              "GeoMatchStatement": {
                "CountryCodes": [
                  "AF",
                  "BR",
                  "CM",
                  "CN",
                  "DZ",
                  "ET",
                  "IQ",
                  "IR",
                  "KE",
                  "KP",
                  "KZ",
                  "LB",
                  "LY",
                  "MA",
                  "ML",
                  "NG",
                  "PK",
                  "PS",
                  "RO",
                  "RU",
                  "SO",
                  "SS",
                  "SY",
                  "TR",
                  "UA",
                  "UG",
                  "VE",
                  "YE"
                ]
              }
            },
            "VisibilityConfig": {
              "CloudWatchMetricsEnabled": true,
              "MetricName": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Ref": "ASI"
                    },
                    "-",
                    {
                      "Ref": "ProjectName"
                    },
                    "-",
                    {
                      "Ref": "Environment"
                    },
                    "-apiwaf",
                    {
                      "Fn::If": [
                        "NamingSuffixSet",
                        {
                          "Fn::Join": [
                            "",
                            [
                              "-",
                              {
                                "Ref": "NamingSuffix"
                              }
                            ]
                          ]
                        },
                        ""
                      ]
                    },
                    "-blocked-countries-metric"
                  ]
                ]
              },
              "SampledRequestsEnabled": true
            }
          },
          {
            "Name": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "ASI"
                  },
                  "-",
                  {
                    "Ref": "ProjectName"
                  },
                  "-",
                  {
                    "Ref": "Environment"
                  },
                  "-apiwaf",
                  {
                    "Fn::If": [
                      "NamingSuffixSet",
                      {
                        "Fn::Join": [
                          "",
                          [
                            "-",
                            {
                              "Ref": "NamingSuffix"
                            }
                          ]
                        ]
                      },
                      ""
                    ]
                  },
                  "AWSManagedRulesCommonRuleSet"
                ]
              ]
            },
            "OverrideAction": {
              "None": {}
            },
            "Priority": 2,
            "Statement": {
              "ManagedRuleGroupStatement": {
                "ExcludedRules": [
                  {
                    "Name": "SizeRestrictions_BODY"
                  }
                ],
                "Name": "AWSManagedRulesCommonRuleSet",
                "VendorName": "AWS"
              }
            },
            "VisibilityConfig": {
              "CloudWatchMetricsEnabled": true,
              "MetricName": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Ref": "ASI"
                    },
                    "-",
                    {
                      "Ref": "ProjectName"
                    },
                    "-",
                    {
                      "Ref": "Environment"
                    },
                    "-apiwaf",
                    {
                      "Fn::If": [
                        "NamingSuffixSet",
                        {
                          "Fn::Join": [
                            "",
                            [
                              "-",
                              {
                                "Ref": "NamingSuffix"
                              }
                            ]
                          ]
                        },
                        ""
                      ]
                    },
                    "AWSManagedRulesCommonRuleSet-metric"
                  ]
                ]
              },
              "SampledRequestsEnabled": true
            }
          },
          {
            "Name": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "ASI"
                  },
                  "-",
                  {
                    "Ref": "ProjectName"
                  },
                  "-",
                  {
                    "Ref": "Environment"
                  },
                  "-apiwaf",
                  {
                    "Fn::If": [
                      "NamingSuffixSet",
                      {
                        "Fn::Join": [
                          "",
                          [
                            "-",
                            {
                              "Ref": "NamingSuffix"
                            }
                          ]
                        ]
                      },
                      ""
                    ]
                  },
                  "AWSManagedRulesAdminProtectionRuleSet"
                ]
              ]
            },
            "OverrideAction": {
              "None": {}
            },
            "Priority": 3,
            "Statement": {
              "ManagedRuleGroupStatement": {
                "Name": "AWSManagedRulesAdminProtectionRuleSet",
                "VendorName": "AWS"
              }
            },
            "VisibilityConfig": {
              "CloudWatchMetricsEnabled": true,
              "MetricName": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Ref": "ASI"
                    },
                    "-",
                    {
                      "Ref": "ProjectName"
                    },
                    "-",
                    {
                      "Ref": "Environment"
                    },
                    "-apiwaf",
                    {
                      "Fn::If": [
                        "NamingSuffixSet",
                        {
                          "Fn::Join": [
                            "",
                            [
                              "-",
                              {
                                "Ref": "NamingSuffix"
                              }
                            ]
                          ]
                        },
                        ""
                      ]
                    },
                    "AWSManagedRulesAdminProtectionRuleSet-metric"
                  ]
                ]
              },
              "SampledRequestsEnabled": true
            }
          },
          {
            "Name": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "ASI"
                  },
                  "-",
                  {
                    "Ref": "ProjectName"
                  },
                  "-",
                  {
                    "Ref": "Environment"
                  },
                  "-apiwaf",
                  {
                    "Fn::If": [
                      "NamingSuffixSet",
                      {
                        "Fn::Join": [
                          "",
                          [
                            "-",
                            {
                              "Ref": "NamingSuffix"
                            }
                          ]
                        ]
                      },
                      ""
                    ]
                  },
                  "AWSManagedRulesKnownBadInputsRuleSet"
                ]
              ]
            },
            "OverrideAction": {
              "None": {}
            },
            "Priority": 4,
            "Statement": {
              "ManagedRuleGroupStatement": {
                "Name": "AWSManagedRulesKnownBadInputsRuleSet",
                "VendorName": "AWS"
              }
            },
            "VisibilityConfig": {
              "CloudWatchMetricsEnabled": true,
              "MetricName": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Ref": "ASI"
                    },
                    "-",
                    {
                      "Ref": "ProjectName"
                    },
                    "-",
                    {
                      "Ref": "Environment"
                    },
                    "-apiwaf",
                    {
                      "Fn::If": [
                        "NamingSuffixSet",
                        {
                          "Fn::Join": [
                            "",
                            [
                              "-",
                              {
                                "Ref": "NamingSuffix"
                              }
                            ]
                          ]
                        },
                        ""
                      ]
                    },
                    "AWSManagedRulesKnownBadInputsRuleSet-metric"
                  ]
                ]
              },
              "SampledRequestsEnabled": true
            }
          },
          {
            "Name": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "ASI"
                  },
                  "-",
                  {
                    "Ref": "ProjectName"
                  },
                  "-",
                  {
                    "Ref": "Environment"
                  },
                  "-apiwaf",
                  {
                    "Fn::If": [
                      "NamingSuffixSet",
                      {
                        "Fn::Join": [
                          "",
                          [
                            "-",
                            {
                              "Ref": "NamingSuffix"
                            }
                          ]
                        ]
                      },
                      ""
                    ]
                  },
                  "AWSManagedRulesAmazonIpReputationList"
                ]
              ]
            },
            "OverrideAction": {
              "None": {}
            },
            "Priority": 5,
            "Statement": {
              "ManagedRuleGroupStatement": {
                "Name": "AWSManagedRulesAmazonIpReputationList",
                "VendorName": "AWS"
              }
            },
            "VisibilityConfig": {
              "CloudWatchMetricsEnabled": true,
              "MetricName": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Ref": "ASI"
                    },
                    "-",
                    {
                      "Ref": "ProjectName"
                    },
                    "-",
                    {
                      "Ref": "Environment"
                    },
                    "-apiwaf",
                    {
                      "Fn::If": [
                        "NamingSuffixSet",
                        {
                          "Fn::Join": [
                            "",
                            [
                              "-",
                              {
                                "Ref": "NamingSuffix"
                              }
                            ]
                          ]
                        },
                        ""
                      ]
                    },
                    "AWSManagedRulesAmazonIpReputationList-metric"
                  ]
                ]
              },
              "SampledRequestsEnabled": true
            }
          },
          {
            "Action": {
              "Block": {}
            },
            "Name": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "ASI"
                  },
                  "-",
                  {
                    "Ref": "ProjectName"
                  },
                  "-",
                  {
                    "Ref": "Environment"
                  },
                  "-apiwaf",
                  {
                    "Fn::If": [
                      "NamingSuffixSet",
                      {
                        "Fn::Join": [
                          "",
                          [
                            "-",
                            {
                              "Ref": "NamingSuffix"
                            }
                          ]
                        ]
                      },
                      ""
                    ]
                  },
                  "-rate-limit"
                ]
              ]
            },
            "Priority": 6,
            "Statement": {
              "RateBasedStatement": {
                "AggregateKeyType": "IP",
                "Limit": 3000
              }
            },
            "VisibilityConfig": {
              "CloudWatchMetricsEnabled": true,
              "MetricName": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Ref": "ASI"
                    },
                    "-",
                    {
                      "Ref": "ProjectName"
                    },
                    "-",
                    {
                      "Ref": "Environment"
                    },
                    "-apiwaf",
                    {
                      "Fn::If": [
                        "NamingSuffixSet",
                        {
                          "Fn::Join": [
                            "",
                            [
                              "-",
                              {
                                "Ref": "NamingSuffix"
                              }
                            ]
                          ]
                        },
                        ""
                      ]
                    },
                    "-rate-limit-metric"
                  ]
                ]
              },
              "SampledRequestsEnabled": true
            }
          },
          {
            "Action": {
              "Block": {}
            },
            "Name": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "ASI"
                  },
                  "-",
                  {
                    "Ref": "ProjectName"
                  },
                  "-",
                  {
                    "Ref": "Environment"
                  },
                  "-apiwaf",
                  {
                    "Fn::If": [
                      "NamingSuffixSet",
                      {
                        "Fn::Join": [
                          "",
                          [
                            "-",
                            {
                              "Ref": "NamingSuffix"
                            }
                          ]
                        ]
                      },
                      ""
                    ]
                  }
                ]
              ]
            },
            "Priority": 7,
            "Statement": {
              "SizeConstraintStatement": {
                "ComparisonOperator": "GT",
                "FieldToMatch": {
                  "Body": {}
                },
                "Size": 8192,
                "TextTransformations": [
                  {
                    "Priority": 0,
                    "Type": "NONE"
                  }
                ]
              }
            },
            "VisibilityConfig": {
              "CloudWatchMetricsEnabled": true,
              "MetricName": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Ref": "ASI"
                    },
                    "-",
                    {
                      "Ref": "ProjectName"
                    },
                    "-",
                    {
                      "Ref": "Environment"
                    },
                    "-apiwaf",
                    {
                      "Fn::If": [
                        "NamingSuffixSet",
                        {
                          "Fn::Join": [
                            "",
                            [
                              "-",
                              {
                                "Ref": "NamingSuffix"
                              }
                            ]
                          ]
                        },
                        ""
                      ]
                    },
                    "-metric"
                  ]
                ]
              },
              "SampledRequestsEnabled": true
            }
          },
          {
            "Action": {
              "Block": {}
            },
            "Name": "x-source-header-rule",
            "Priority": 8,
            "Statement": {
              "NotStatement": {
                "Statement": {
                  "ByteMatchStatement": {
                    "FieldToMatch": {
                      "SingleHeader": {
                        "Name": "x-source-cdn"
                      }
                    },
                    "PositionalConstraint": "EXACTLY",
                    "SearchString": "6f697e91-a12d-552c-bb7a-22563bfbcd4c",
                    "TextTransformations": [
                      {
                        "Priority": 0,
                        "Type": "NONE"
                      }
                    ]
                  }
                }
              }
            },
            "VisibilityConfig": {
              "CloudWatchMetricsEnabled": true,
              "MetricName": "x-source-header-rule-metric",
              "SampledRequestsEnabled": true
            }
          }
        ],
        "Tags": [
          {
            "Key": "asiName",
            "Value": "ABC"
          },
          {
            "Key": "projectName",
            "Value": "testProject"
          }
        ]
      },
      "DependsOn": [
        "RegionalApiAccount2945541F"
      ]
    },
    "RegionalApidefaultStageWebACLLogDeliveryStreamRoleA763471D": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "firehose.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Path": "/",
        "RoleName": "aws-waf-logs-MyTestStack-c833a56603606",
        "Tags": [
          {
            "Key": "asiName",
            "Value": "ABC"
          },
          {
            "Key": "projectName",
            "Value": "testProject"
          }
        ]
      },
      "DependsOn": [
        "RegionalApiAccount2945541F"
      ]
    },
    "RegionalApidefaultStageWebACLLogDeliveryStreamRoleDefaultPolicy14BF1091": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "kms:Decrypt",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "RegionalApidefaultStageWebACLLogDeliveryStreamLogDeliveryStreamStreamCmk8CBB2A9A",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "RegionalApidefaultStageWebACLLogDeliveryStreamRoleDefaultPolicy14BF1091",
        "Roles": [
          {
            "Ref": "RegionalApidefaultStageWebACLLogDeliveryStreamRoleA763471D"
          }
        ]
      },
      "DependsOn": [
        "RegionalApiAccount2945541F"
      ]
    },
    "RegionalApidefaultStageWebACLLogDeliveryStreamLogDeliveryStreamLogGroup65718C15": {
      "Type": "Custom::MooLogGroup",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "MooLogGroupProviderframeworkonEventFECEF8B7",
            "Arn"
          ]
        },
        "logGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/kinesisfirehose/aws-waf-logs-MyTestStack-c833a56603606",
              {
                "Fn::If": [
                  "NamingSuffixSet",
                  {
                    "Fn::Join": [
                      "",
                      [
                        "-",
                        {
                          "Ref": "NamingSuffix"
                        }
                      ]
                    ]
                  },
                  ""
                ]
              }
            ]
          ]
        },
        "retention": 365,
        "logGroupEncryption": true,
        "kmsKeyAliasName": "alias/moo/logs/v1"
      },
      "DependsOn": [
        "RegionalApiAccount2945541F"
      ],
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain"
    },
    "RegionalApidefaultStageWebACLLogDeliveryStreamLogDeliveryStreamLogGroupLogDeliveryStreamMooLogStreamLogStreamProviderframeworkonEventServiceRoleDAF46A31": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ],
        "Tags": [
          {
            "Key": "asiName",
            "Value": "ABC"
          },
          {
            "Key": "cdkPath",
            "Value": "MyTestStack/RegionalApi/defaultStage/WebACL/LogDeliveryStream"
          },
          {
            "Key": "cfnLogicalId",
            "Value": "MyTestStackRegionalApidefaultStageWebACLLogDeliveryStream25C14D59"
          },
          {
            "Key": "cfnStack",
            "Value": "MyTestStack"
          },
          {
            "Key": "projectName",
            "Value": "testProject"
          }
        ]
      },
      "DependsOn": [
        "RegionalApiAccount2945541F"
      ]
    },
    "RegionalApidefaultStageWebACLLogDeliveryStreamLogDeliveryStreamLogGroupLogDeliveryStreamMooLogStreamLogStreamProviderframeworkonEventServiceRoleDefaultPolicy0E942E46": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "SingletonLambda557d423fb9024b03bf7238dc848592a5F9DBF653",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "eryStreamLogDeliveryStreamLogGroupLogDeliveryStreamMooLogStreamLogStreamProviderframeworkonEventServiceRoleDefaultPolicy0E942E46",
        "Roles": [
          {
            "Ref": "RegionalApidefaultStageWebACLLogDeliveryStreamLogDeliveryStreamLogGroupLogDeliveryStreamMooLogStreamLogStreamProviderframeworkonEventServiceRoleDAF46A31"
          }
        ]
      },
      "DependsOn": [
        "RegionalApiAccount2945541F"
      ]
    },
    "RegionalApidefaultStageWebACLLogDeliveryStreamLogDeliveryStreamLogGroupLogDeliveryStreamMooLogStreamLogStreamProviderframeworkonEvent8616E9AE": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParameters-CDK_HASH_REMOVED"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters-CDK_HASH_REMOVED"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters-CDK_HASH_REMOVED"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "RegionalApidefaultStageWebACLLogDeliveryStreamLogDeliveryStreamLogGroupLogDeliveryStreamMooLogStreamLogStreamProviderframeworkonEventServiceRoleDAF46A31",
            "Arn"
          ]
        },
        "Description": "AWS CDK resource provider framework - onEvent (MyTestStack/RegionalApi/defaultStage/WebACL/LogDeliveryStream/LogDeliveryStreamLogGroup/LogDeliveryStreamMooLogStream/LogStreamProvider)",
        "Environment": {
          "Variables": {
            "USER_ON_EVENT_FUNCTION_ARN": {
              "Fn::GetAtt": [
                "SingletonLambda557d423fb9024b03bf7238dc848592a5F9DBF653",
                "Arn"
              ]
            }
          }
        },
        "Handler": "framework.onEvent",
        "Runtime": "nodejs12.x",
        "Tags": [
          {
            "Key": "asiName",
            "Value": "ABC"
          },
          {
            "Key": "cdkPath",
            "Value": "MyTestStack/RegionalApi/defaultStage/WebACL/LogDeliveryStream"
          },
          {
            "Key": "cfnLogicalId",
            "Value": "MyTestStackRegionalApidefaultStageWebACLLogDeliveryStream25C14D59"
          },
          {
            "Key": "cfnStack",
            "Value": "MyTestStack"
          },
          {
            "Key": "projectName",
            "Value": "testProject"
          }
        ],
        "Timeout": 900
      },
      "DependsOn": [
        "RegionalApiAccount2945541F",
        "RegionalApidefaultStageWebACLLogDeliveryStreamLogDeliveryStreamLogGroupLogDeliveryStreamMooLogStreamLogStreamProviderframeworkonEventServiceRoleDefaultPolicy0E942E46",
        "RegionalApidefaultStageWebACLLogDeliveryStreamLogDeliveryStreamLogGroupLogDeliveryStreamMooLogStreamLogStreamProviderframeworkonEventServiceRoleDAF46A31"
      ]
    },
    "RegionalApidefaultStageWebACLLogDeliveryStreamLogDeliveryStreamLogGroupLogDeliveryStreamMooLogStreamLogStreamProviderframeworkonEventLogRetentionFA3EE31B": {
      "Type": "Custom::LogRetention",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn"
          ]
        },
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "RegionalApidefaultStageWebACLLogDeliveryStreamLogDeliveryStreamLogGroupLogDeliveryStreamMooLogStreamLogStreamProviderframeworkonEvent8616E9AE"
              }
            ]
          ]
        },
        "RetentionInDays": 90
      },
      "DependsOn": [
        "RegionalApiAccount2945541F"
      ]
    },
    "RegionalApidefaultStageWebACLLogDeliveryStreamLogDeliveryStreamLogGroupLogDeliveryStreamMooLogStream6DD7C602": {
      "Type": "Custom::MooLogStream",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "RegionalApidefaultStageWebACLLogDeliveryStreamLogDeliveryStreamLogGroupLogDeliveryStreamMooLogStreamLogStreamProviderframeworkonEvent8616E9AE",
            "Arn"
          ]
        },
        "logGroupName": {
          "Fn::GetAtt": [
            "RegionalApidefaultStageWebACLLogDeliveryStreamLogDeliveryStreamLogGroup65718C15",
            "logGroupName"
          ]
        },
        "logStreamName": "log-c8e6f7b8cbb9428cb754b7c0fd92cd3a35bb2a4ae6"
      },
      "DependsOn": [
        "RegionalApiAccount2945541F"
      ],
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain"
    },
    "RegionalApidefaultStageWebACLLogDeliveryStreamdeliveryStreamPolicy2073943B": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "logs:PutLogEvents",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "RegionalApidefaultStageWebACLLogDeliveryStreamLogDeliveryStreamLogGroup65718C15",
                  "Arn"
                ]
              }
            },
            {
              "Action": [
                "s3:AbortMultipartUpload",
                "s3:GetBucketLocation",
                "s3:GetObject",
                "s3:ListBucket",
                "s3:ListBucketMultipartUploads",
                "s3:PutObject",
                "s3:PutObjectAcl"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::waflogs-",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      "-",
                      {
                        "Ref": "AWS::Region"
                      }
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::waflogs-",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      "-",
                      {
                        "Ref": "AWS::Region"
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "RegionalApidefaultStageWebACLLogDeliveryStreamdeliveryStreamPolicy2073943B",
        "Roles": [
          {
            "Ref": "RegionalApidefaultStageWebACLLogDeliveryStreamRoleA763471D"
          }
        ]
      },
      "DependsOn": [
        "RegionalApiAccount2945541F"
      ]
    },
    "RegionalApidefaultStageWebACLLogDeliveryStreamLogDeliveryStreamStreamCmk8CBB2A9A": {
      "Type": "AWS::KMS::Key",
      "Properties": {
        "KeyPolicy": {
          "Statement": [
            {
              "Action": [
                "kms:Create*",
                "kms:Describe*",
                "kms:Enable*",
                "kms:List*",
                "kms:Put*",
                "kms:Update*",
                "kms:Revoke*",
                "kms:Disable*",
                "kms:Get*",
                "kms:Delete*",
                "kms:ScheduleKeyDeletion",
                "kms:CancelKeyDeletion",
                "kms:GenerateDataKey",
                "kms:TagResource",
                "kms:UntagResource"
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":root"
                    ]
                  ]
                }
              },
              "Resource": "*"
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*"
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "RegionalApidefaultStageWebACLLogDeliveryStreamRoleA763471D",
                    "Arn"
                  ]
                }
              },
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "Description": "Managed key for MooDeliveryStream: aws-waf-logs-MyTestStack-c833a56603606.",
        "EnableKeyRotation": true,
        "Tags": [
          {
            "Key": "asiName",
            "Value": "ABC"
          },
          {
            "Key": "cdkPath",
            "Value": "MyTestStack/RegionalApi/defaultStage/WebACL/LogDeliveryStream"
          },
          {
            "Key": "cfnLogicalId",
            "Value": "MyTestStackRegionalApidefaultStageWebACLLogDeliveryStream25C14D59"
          },
          {
            "Key": "cfnStack",
            "Value": "MyTestStack"
          },
          {
            "Key": "projectName",
            "Value": "testProject"
          }
        ]
      },
      "DependsOn": [
        "RegionalApiAccount2945541F"
      ],
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete"
    },
    "RegionalApidefaultStageWebACLLogDeliveryStream9023BDB6": {
      "Type": "AWS::KinesisFirehose::DeliveryStream",
      "Properties": {
        "DeliveryStreamEncryptionConfigurationInput": {
          "KeyARN": {
            "Fn::GetAtt": [
              "RegionalApidefaultStageWebACLLogDeliveryStreamLogDeliveryStreamStreamCmk8CBB2A9A",
              "Arn"
            ]
          },
          "KeyType": "CUSTOMER_MANAGED_CMK"
        },
        "DeliveryStreamName": "aws-waf-logs-MyTestStack-c833a56603606",
        "DeliveryStreamType": "DirectPut",
        "S3DestinationConfiguration": {
          "BucketARN": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":s3:::waflogs-",
                {
                  "Ref": "AWS::AccountId"
                },
                "-",
                {
                  "Ref": "AWS::Region"
                }
              ]
            ]
          },
          "BufferingHints": {
            "IntervalInSeconds": 300,
            "SizeInMBs": 5
          },
          "CloudWatchLoggingOptions": {
            "Enabled": true,
            "LogGroupName": {
              "Fn::GetAtt": [
                "RegionalApidefaultStageWebACLLogDeliveryStreamLogDeliveryStreamLogGroup65718C15",
                "logGroupName"
              ]
            },
            "LogStreamName": {
              "Fn::GetAtt": [
                "RegionalApidefaultStageWebACLLogDeliveryStreamLogDeliveryStreamLogGroupLogDeliveryStreamMooLogStream6DD7C602",
                "logStreamName"
              ]
            }
          },
          "CompressionFormat": "UNCOMPRESSED",
          "Prefix": {
            "Fn::Join": [
              "",
              [
                {
                  "Ref": "ASI"
                },
                "-",
                {
                  "Ref": "ProjectName"
                },
                "-",
                {
                  "Ref": "Environment"
                },
                "-apiwaf",
                {
                  "Fn::If": [
                    "NamingSuffixSet",
                    {
                      "Fn::Join": [
                        "",
                        [
                          "-",
                          {
                            "Ref": "NamingSuffix"
                          }
                        ]
                      ]
                    },
                    ""
                  ]
                },
                "/"
              ]
            ]
          },
          "RoleARN": {
            "Fn::GetAtt": [
              "RegionalApidefaultStageWebACLLogDeliveryStreamRoleA763471D",
              "Arn"
            ]
          }
        },
        "Tags": [
          {
            "Key": "asiName",
            "Value": "ABC"
          },
          {
            "Key": "cdkPath",
            "Value": "MyTestStack/RegionalApi/defaultStage/WebACL/LogDeliveryStream"
          },
          {
            "Key": "cfnLogicalId",
            "Value": "MyTestStackRegionalApidefaultStageWebACLLogDeliveryStream25C14D59"
          },
          {
            "Key": "cfnStack",
            "Value": "MyTestStack"
          },
          {
            "Key": "projectName",
            "Value": "testProject"
          }
        ]
      },
      "DependsOn": [
        "RegionalApiAccount2945541F"
      ],
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete"
    },
    "RegionalApidefaultStageWebACLLogDeliveryStreamDeliveryToS3CreateDataFreshnessAlarm19BD4BF6": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ComparisonOperator": "GreaterThanThreshold",
        "EvaluationPeriods": 1,
        "AlarmActions": [
          {
            "Fn::Join": [
              "",
              [
                "arn:aws:sns:",
                {
                  "Ref": "AWS::Region"
                },
                ":",
                {
                  "Ref": "AWS::AccountId"
                },
                ":CriticalIncidentEventTopic"
              ]
            ]
          }
        ],
        "AlarmDescription": "Kinesis Delivery Stream aws-waf-logs-MyTestStack-c833a56603606 is showing the oldest record is Maximum\\n      of 900 or more seconds in the\\n      last 60 seconds.\\n      This is usually an indication of the stream not delivering and may require investigation.\\n      See {https://confluence.mutualofomaha.com/confluence/x/KAgxHw} for more information.",
        "AlarmName": {
          "Fn::Join": [
            "",
            [
              "aws-waf-logs-MyTestStack-c833a56603606-data-freshness-exceeded",
              {
                "Fn::If": [
                  "NamingSuffixSet",
                  {
                    "Fn::Join": [
                      "",
                      [
                        "-",
                        {
                          "Ref": "NamingSuffix"
                        }
                      ]
                    ]
                  },
                  ""
                ]
              }
            ]
          ]
        },
        "DatapointsToAlarm": 1,
        "Dimensions": [
          {
            "Name": "DeliveryStreamName",
            "Value": "aws-waf-logs-MyTestStack-c833a56603606"
          }
        ],
        "MetricName": "DeliveryToS3.DataFreshness",
        "Namespace": "AWS/Firehose",
        "Period": 60,
        "Statistic": "Maximum",
        "Threshold": 900,
        "TreatMissingData": "ignore"
      },
      "DependsOn": [
        "RegionalApiAccount2945541F"
      ]
    },
    "RegionalApidefaultStageWebACLLogDeliveryStreamDeliveryToS3SuccessAlarmD69D5496": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ComparisonOperator": "LessThanThreshold",
        "EvaluationPeriods": 1,
        "AlarmActions": [
          {
            "Fn::Join": [
              "",
              [
                "arn:aws:sns:",
                {
                  "Ref": "AWS::Region"
                },
                ":",
                {
                  "Ref": "AWS::AccountId"
                },
                ":CriticalIncidentEventTopic"
              ]
            ]
          }
        ],
        "AlarmDescription": "Kinesis Delivery Stream aws-waf-logs-MyTestStack-c833a56603606 is showing a success rate Average of less than 1 (100%) in the\\n      last 60 seconds.\\n      This is usually an indication of the stream not delivering and may require investigation.\\n      See {https://confluence.mutualofomaha.com/confluence/x/KAgxHw} for more information.",
        "AlarmName": {
          "Fn::Join": [
            "",
            [
              "aws-waf-logs-MyTestStack-c833a56603606-success-failure",
              {
                "Fn::If": [
                  "NamingSuffixSet",
                  {
                    "Fn::Join": [
                      "",
                      [
                        "-",
                        {
                          "Ref": "NamingSuffix"
                        }
                      ]
                    ]
                  },
                  ""
                ]
              }
            ]
          ]
        },
        "DatapointsToAlarm": 1,
        "Dimensions": [
          {
            "Name": "DeliveryStreamName",
            "Value": "aws-waf-logs-MyTestStack-c833a56603606"
          }
        ],
        "MetricName": "DeliveryToS3.Success",
        "Namespace": "AWS/Firehose",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 1,
        "TreatMissingData": "ignore"
      },
      "DependsOn": [
        "RegionalApiAccount2945541F"
      ]
    },
    "RegionalApidefaultStageWebACLProviderframeworkonEventServiceRole756567FE": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ],
        "Tags": [
          {
            "Key": "asiName",
            "Value": "ABC"
          },
          {
            "Key": "projectName",
            "Value": "testProject"
          }
        ]
      },
      "DependsOn": [
        "RegionalApiAccount2945541F"
      ]
    },
    "RegionalApidefaultStageWebACLProviderframeworkonEventServiceRoleDefaultPolicyD078F77E": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "SingletonLambdamoowafv2loggingconfigurationhandler79FF7EC7",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "RegionalApidefaultStageWebACLProviderframeworkonEventServiceRoleDefaultPolicyD078F77E",
        "Roles": [
          {
            "Ref": "RegionalApidefaultStageWebACLProviderframeworkonEventServiceRole756567FE"
          }
        ]
      },
      "DependsOn": [
        "RegionalApiAccount2945541F"
      ]
    },
    "RegionalApidefaultStageWebACLProviderframeworkonEventE14F4745": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParameters-CDK_HASH_REMOVED"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters-CDK_HASH_REMOVED"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters-CDK_HASH_REMOVED"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "RegionalApidefaultStageWebACLProviderframeworkonEventServiceRole756567FE",
            "Arn"
          ]
        },
        "Description": "AWS CDK resource provider framework - onEvent (MyTestStack/RegionalApi/defaultStage/WebACL/Provider)",
        "Environment": {
          "Variables": {
            "USER_ON_EVENT_FUNCTION_ARN": {
              "Fn::GetAtt": [
                "SingletonLambdamoowafv2loggingconfigurationhandler79FF7EC7",
                "Arn"
              ]
            }
          }
        },
        "Handler": "framework.onEvent",
        "Runtime": "nodejs12.x",
        "Tags": [
          {
            "Key": "asiName",
            "Value": "ABC"
          },
          {
            "Key": "projectName",
            "Value": "testProject"
          }
        ],
        "Timeout": 900
      },
      "DependsOn": [
        "RegionalApiAccount2945541F",
        "RegionalApidefaultStageWebACLProviderframeworkonEventServiceRoleDefaultPolicyD078F77E",
        "RegionalApidefaultStageWebACLProviderframeworkonEventServiceRole756567FE"
      ]
    },
    "RegionalApidefaultStageWebACLProviderframeworkonEventLogRetentionFAF119C9": {
      "Type": "Custom::LogRetention",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn"
          ]
        },
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "RegionalApidefaultStageWebACLProviderframeworkonEventE14F4745"
              }
            ]
          ]
        },
        "RetentionInDays": 90
      },
      "DependsOn": [
        "RegionalApiAccount2945541F"
      ]
    },
    "RegionalApidefaultStageWebACLLoggingConfigD526C193": {
      "Type": "Custom::WafLoggingConfiguration",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "RegionalApidefaultStageWebACLProviderframeworkonEventE14F4745",
            "Arn"
          ]
        },
        "LoggingConfiguration": {
          "LogDestinationConfigs": [
            {
              "Fn::GetAtt": [
                "RegionalApidefaultStageWebACLLogDeliveryStream9023BDB6",
                "Arn"
              ]
            }
          ],
          "ResourceArn": {
            "Fn::GetAtt": [
              "RegionalApidefaultStageWebACLF92404C3",
              "Arn"
            ]
          },
          "RedactedFields": [
            {
              "QueryString": {}
            }
          ]
        }
      },
      "DependsOn": [
        "RegionalApiAccount2945541F"
      ],
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete"
    },
    "RegionalApidefaultStageWebACLWebACLAssociationBA3D4093": {
      "Type": "AWS::WAFv2::WebACLAssociation",
      "Properties": {
        "ResourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:aws:apigateway:",
              {
                "Ref": "AWS::Region"
              },
              "::/restapis/",
              {
                "Ref": "RegionalApi3AC391EF"
              },
              "/stages/",
              {
                "Ref": "RegionalApidefaultStageE594CEF8"
              }
            ]
          ]
        },
        "WebACLArn": {
          "Fn::GetAtt": [
            "RegionalApidefaultStageWebACLF92404C3",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "RegionalApiAccount2945541F"
      ]
    },
    "RegionalApiRestAPIDefaultAlarm48A3A70E": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ComparisonOperator": "GreaterThanThreshold",
        "EvaluationPeriods": 1,
        "AlarmActions": [
          {
            "Fn::Join": [
              "",
              [
                "arn:aws:sns:",
                {
                  "Ref": "AWS::Region"
                },
                ":",
                {
                  "Ref": "AWS::AccountId"
                },
                ":CriticalIncidentEventTopic"
              ]
            ]
          }
        ],
        "AlarmDescription": {
          "Fn::Join": [
            "",
            [
              "RestApi ",
              {
                "Ref": "ASI"
              },
              "-",
              {
                "Ref": "ProjectName"
              },
              "-",
              {
                "Ref": "Environment"
              },
              {
                "Fn::If": [
                  "NamingSuffixSet",
                  {
                    "Fn::Join": [
                      "",
                      [
                        "-",
                        {
                          "Ref": "NamingSuffix"
                        }
                      ]
                    ]
                  },
                  ""
                ]
              },
              " has sent a Sum\\n      of 1 or more 5XXXErrors to clients in the last\\n      300 seconds.\\n       This is usually an indication of a sustained failure of one or more backend resources.\\n       See {https://confluence.mutualofomaha.com/confluence/x/yQAmH} for more information."
            ]
          ]
        },
        "AlarmName": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "ASI"
              },
              "-",
              {
                "Ref": "ProjectName"
              },
              "-",
              {
                "Ref": "Environment"
              },
              {
                "Fn::If": [
                  "NamingSuffixSet",
                  {
                    "Fn::Join": [
                      "",
                      [
                        "-",
                        {
                          "Ref": "NamingSuffix"
                        }
                      ]
                    ]
                  },
                  ""
                ]
              },
              "-api-error-rate",
              {
                "Fn::If": [
                  "NamingSuffixSet",
                  {
                    "Fn::Join": [
                      "",
                      [
                        "-",
                        {
                          "Ref": "NamingSuffix"
                        }
                      ]
                    ]
                  },
                  ""
                ]
              }
            ]
          ]
        },
        "Dimensions": [
          {
            "Name": "ApiName",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "ASI"
                  },
                  "-",
                  {
                    "Ref": "ProjectName"
                  },
                  "-",
                  {
                    "Ref": "Environment"
                  },
                  {
                    "Fn::If": [
                      "NamingSuffixSet",
                      {
                        "Fn::Join": [
                          "",
                          [
                            "-",
                            {
                              "Ref": "NamingSuffix"
                            }
                          ]
                        ]
                      },
                      ""
                    ]
                  }
                ]
              ]
            }
          }
        ],
        "MetricName": "5XXError",
        "Namespace": "AWS/ApiGateway",
        "Period": 300,
        "Statistic": "Sum",
        "Threshold": 1,
        "TreatMissingData": "ignore"
      }
    },
    "RegionalApiRegionalApiUsagePlanF1150C9C": {
      "Type": "AWS::ApiGateway::UsagePlan",
      "Properties": {
        "ApiStages": [
          {
            "ApiId": {
              "Ref": "RegionalApi3AC391EF"
            },
            "Stage": {
              "Ref": "RegionalApidefaultStageE594CEF8"
            },
            "Throttle": {}
          }
        ],
        "Description": {
          "Fn::Join": [
            "",
            [
              "Usage Plan for client access to restApi: ",
              {
                "Ref": "RegionalApi3AC391EF"
              }
            ]
          ]
        },
        "Tags": [
          {
            "Key": "asiName",
            "Value": "ABC"
          },
          {
            "Key": "projectName",
            "Value": "testProject"
          }
        ],
        "UsagePlanName": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "ASI"
              },
              "-",
              {
                "Ref": "ProjectName"
              },
              "-",
              {
                "Ref": "Environment"
              },
              {
                "Fn::If": [
                  "NamingSuffixSet",
                  {
                    "Fn::Join": [
                      "",
                      [
                        "-",
                        {
                          "Ref": "NamingSuffix"
                        }
                      ]
                    ]
                  },
                  ""
                ]
              }
            ]
          ]
        }
      }
    },
    "RegionalApiRegionalApiUsagePlanUsagePlanKeyResource722F3403": {
      "Type": "AWS::ApiGateway::UsagePlanKey",
      "Properties": {
        "KeyId": {
          "Ref": "RegionalApiRegionalApiclientApiKeyreq6977527EDAA69B"
        },
        "KeyType": "API_KEY",
        "UsagePlanId": {
          "Ref": "RegionalApiRegionalApiUsagePlanF1150C9C"
        }
      }
    },
    "RegionalApiRegionalApiclientApiKeyreq6977527EDAA69B": {
      "Type": "AWS::ApiGateway::ApiKey",
      "Properties": {
        "Description": {
          "Fn::Join": [
            "",
            [
              "Client API Key for restApi ",
              {
                "Ref": "ASI"
              },
              "-",
              {
                "Ref": "ProjectName"
              },
              "-",
              {
                "Ref": "Environment"
              },
              {
                "Fn::If": [
                  "NamingSuffixSet",
                  {
                    "Fn::Join": [
                      "",
                      [
                        "-",
                        {
                          "Ref": "NamingSuffix"
                        }
                      ]
                    ]
                  },
                  ""
                ]
              }
            ]
          ]
        },
        "Enabled": true,
        "Name": {
          "Fn::Join": [
            "",
            [
              {
                "Fn::If": [
                  "NamingSuffixSet",
                  {
                    "Fn::Join": [
                      "",
                      [
                        {
                          "Ref": "NamingSuffix"
                        },
                        "-"
                      ]
                    ]
                  },
                  ""
                ]
              },
              "req69775-2-",
              {
                "Ref": "Environment"
              },
              "-",
              {
                "Ref": "ProjectName"
              },
              "-",
              {
                "Ref": "ASI"
              }
            ]
          ]
        },
        "Tags": [
          {
            "Key": "asiName",
            "Value": "ABC"
          },
          {
            "Key": "projectName",
            "Value": "testProject"
          }
        ]
      }
    },
    "SingletonLambda557d423fb9024b03bf7238dc848592a5ServiceRole342A23D1": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ],
        "Tags": [
          {
            "Key": "asiName",
            "Value": "ABC"
          },
          {
            "Key": "projectName",
            "Value": "testProject"
          }
        ]
      }
    },
    "SingletonLambda557d423fb9024b03bf7238dc848592a5ServiceRoleDefaultPolicy8E3E8D43": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:describeLogStreams",
                "logs:createLogStream",
                "logs:deleteLogStream"
              ],
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "SingletonLambda557d423fb9024b03bf7238dc848592a5ServiceRoleDefaultPolicy8E3E8D43",
        "Roles": [
          {
            "Ref": "SingletonLambda557d423fb9024b03bf7238dc848592a5ServiceRole342A23D1"
          }
        ]
      }
    },
    "SingletonLambda557d423fb9024b03bf7238dc848592a5F9DBF653": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParameters-CDK_HASH_REMOVED"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters-CDK_HASH_REMOVED"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters-CDK_HASH_REMOVED"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "SingletonLambda557d423fb9024b03bf7238dc848592a5ServiceRole342A23D1",
            "Arn"
          ]
        },
        "Description": "Cloud Formation Custom Resource to create and delete MooLogStream",
        "Handler": "handler-bundle.handler",
        "Runtime": "nodejs14.x",
        "Tags": [
          {
            "Key": "asiName",
            "Value": "ABC"
          },
          {
            "Key": "projectName",
            "Value": "testProject"
          }
        ],
        "Timeout": 120
      },
      "DependsOn": [
        "SingletonLambda557d423fb9024b03bf7238dc848592a5ServiceRoleDefaultPolicy8E3E8D43",
        "SingletonLambda557d423fb9024b03bf7238dc848592a5ServiceRole342A23D1"
      ]
    },
    "SingletonLambda557d423fb9024b03bf7238dc848592a5LogRetention62780F69": {
      "Type": "Custom::LogRetention",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn"
          ]
        },
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "SingletonLambda557d423fb9024b03bf7238dc848592a5F9DBF653"
              }
            ]
          ]
        },
        "RetentionInDays": 90
      }
    },
    "SingletonLambdamoowafv2loggingconfigurationhandlerServiceRole077E16C4": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ],
        "Tags": [
          {
            "Key": "asiName",
            "Value": "ABC"
          },
          {
            "Key": "projectName",
            "Value": "testProject"
          }
        ]
      }
    },
    "SingletonLambdamoowafv2loggingconfigurationhandlerServiceRoleDefaultPolicyBDCA89CC": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "iam:CreateServiceLinkedRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:iam::",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":role/aws-service-role/wafv2.amazonaws.com/AWSServiceRoleForWAFV2Logging"
                  ]
                ]
              }
            },
            {
              "Action": "wafv2:*LoggingConfiguration",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "RegionalApidefaultStageWebACLF92404C3",
                  "Arn"
                ]
              }
            },
            {
              "Action": "wafv2:*LoggingConfiguration",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudfrontPublicApiWebDistributionWafA7E20BCC",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "SingletonLambdamoowafv2loggingconfigurationhandlerServiceRoleDefaultPolicyBDCA89CC",
        "Roles": [
          {
            "Ref": "SingletonLambdamoowafv2loggingconfigurationhandlerServiceRole077E16C4"
          }
        ]
      }
    },
    "SingletonLambdamoowafv2loggingconfigurationhandler79FF7EC7": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParameters-CDK_HASH_REMOVED"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters-CDK_HASH_REMOVED"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters-CDK_HASH_REMOVED"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "SingletonLambdamoowafv2loggingconfigurationhandlerServiceRole077E16C4",
            "Arn"
          ]
        },
        "Handler": "handler-bundle.handler",
        "Runtime": "nodejs14.x",
        "Tags": [
          {
            "Key": "asiName",
            "Value": "ABC"
          },
          {
            "Key": "projectName",
            "Value": "testProject"
          }
        ],
        "Timeout": 900
      },
      "DependsOn": [
        "SingletonLambdamoowafv2loggingconfigurationhandlerServiceRoleDefaultPolicyBDCA89CC",
        "SingletonLambdamoowafv2loggingconfigurationhandlerServiceRole077E16C4"
      ]
    },
    "CloudfrontPublicApiWebDistributionWafWebACLIpSet3FC04DD8": {
      "Type": "AWS::WAFv2::IPSet",
      "Properties": {
        "Addresses": [
          "170.31.0.0/16",
          "3.223.151.116/32",
          "3.223.138.144/32",
          "44.240.254.241/32",
          "54.190.188.89/32",
          "3.226.219.72/32",
          "34.203.21.245/32",
          "54.68.86.27/32",
          "52.13.72.236/32"
        ],
        "IPAddressVersion": "IPV4",
        "Scope": "CLOUDFRONT",
        "Name": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "ASI"
              },
              "-",
              {
                "Ref": "ProjectName"
              },
              "-",
              {
                "Ref": "Environment"
              },
              "-cdn",
              {
                "Fn::If": [
                  "NamingSuffixSet",
                  {
                    "Fn::Join": [
                      "",
                      [
                        "-",
                        {
                          "Ref": "NamingSuffix"
                        }
                      ]
                    ]
                  },
                  ""
                ]
              },
              "-ipset"
            ]
          ]
        },
        "Tags": [
          {
            "Key": "asiName",
            "Value": "ABC"
          },
          {
            "Key": "projectName",
            "Value": "testProject"
          },
          {
            "Key": "SetType",
            "Value": "DefaultIPv4"
          }
        ]
      }
    },
    "CloudfrontPublicApiWebDistributionWafWebACLIpV6Set43D761C9": {
      "Type": "AWS::WAFv2::IPSet",
      "Properties": {
        "Addresses": [],
        "IPAddressVersion": "IPV6",
        "Scope": "CLOUDFRONT",
        "Name": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "ASI"
              },
              "-",
              {
                "Ref": "ProjectName"
              },
              "-",
              {
                "Ref": "Environment"
              },
              "-cdn",
              {
                "Fn::If": [
                  "NamingSuffixSet",
                  {
                    "Fn::Join": [
                      "",
                      [
                        "-",
                        {
                          "Ref": "NamingSuffix"
                        }
                      ]
                    ]
                  },
                  ""
                ]
              },
              "-ipv6set"
            ]
          ]
        },
        "Tags": [
          {
            "Key": "asiName",
            "Value": "ABC"
          },
          {
            "Key": "projectName",
            "Value": "testProject"
          },
          {
            "Key": "SetType",
            "Value": "DefaultIPv6"
          }
        ]
      },
      "DependsOn": [
        "CloudfrontPublicApiWebDistributionWafWebACLIpSet3FC04DD8"
      ]
    },
    "CloudfrontPublicApiWebDistributionWafA7E20BCC": {
      "Type": "AWS::WAFv2::WebACL",
      "Properties": {
        "DefaultAction": {
          "Allow": {}
        },
        "Scope": "CLOUDFRONT",
        "VisibilityConfig": {
          "CloudWatchMetricsEnabled": true,
          "MetricName": {
            "Fn::Join": [
              "",
              [
                {
                  "Ref": "ASI"
                },
                "-",
                {
                  "Ref": "ProjectName"
                },
                "-",
                {
                  "Ref": "Environment"
                },
                "-cdn",
                {
                  "Fn::If": [
                    "NamingSuffixSet",
                    {
                      "Fn::Join": [
                        "",
                        [
                          "-",
                          {
                            "Ref": "NamingSuffix"
                          }
                        ]
                      ]
                    },
                    ""
                  ]
                },
                "-metric"
              ]
            ]
          },
          "SampledRequestsEnabled": true
        },
        "Name": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "ASI"
              },
              "-",
              {
                "Ref": "ProjectName"
              },
              "-",
              {
                "Ref": "Environment"
              },
              "-cdn",
              {
                "Fn::If": [
                  "NamingSuffixSet",
                  {
                    "Fn::Join": [
                      "",
                      [
                        "-",
                        {
                          "Ref": "NamingSuffix"
                        }
                      ]
                    ]
                  },
                  ""
                ]
              }
            ]
          ]
        },
        "Rules": [
          {
            "Action": {
              "Block": {}
            },
            "Name": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "ASI"
                  },
                  "-",
                  {
                    "Ref": "ProjectName"
                  },
                  "-",
                  {
                    "Ref": "Environment"
                  },
                  "-cdn",
                  {
                    "Fn::If": [
                      "NamingSuffixSet",
                      {
                        "Fn::Join": [
                          "",
                          [
                            "-",
                            {
                              "Ref": "NamingSuffix"
                            }
                          ]
                        ]
                      },
                      ""
                    ]
                  },
                  "-ipset"
                ]
              ]
            },
            "Priority": 0,
            "Statement": {
              "NotStatement": {
                "Statement": {
                  "OrStatement": {
                    "Statements": [
                      {
                        "IPSetReferenceStatement": {
                          "Arn": {
                            "Fn::GetAtt": [
                              "CloudfrontPublicApiWebDistributionWafWebACLIpSet3FC04DD8",
                              "Arn"
                            ]
                          }
                        }
                      },
                      {
                        "IPSetReferenceStatement": {
                          "Arn": {
                            "Fn::GetAtt": [
                              "CloudfrontPublicApiWebDistributionWafWebACLIpV6Set43D761C9",
                              "Arn"
                            ]
                          }
                        }
                      }
                    ]
                  }
                }
              }
            },
            "VisibilityConfig": {
              "CloudWatchMetricsEnabled": true,
              "MetricName": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Ref": "ASI"
                    },
                    "-",
                    {
                      "Ref": "ProjectName"
                    },
                    "-",
                    {
                      "Ref": "Environment"
                    },
                    "-cdn",
                    {
                      "Fn::If": [
                        "NamingSuffixSet",
                        {
                          "Fn::Join": [
                            "",
                            [
                              "-",
                              {
                                "Ref": "NamingSuffix"
                              }
                            ]
                          ]
                        },
                        ""
                      ]
                    },
                    "-ipset-metric"
                  ]
                ]
              },
              "SampledRequestsEnabled": true
            }
          },
          {
            "Action": {
              "Block": {}
            },
            "Name": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "ASI"
                  },
                  "-",
                  {
                    "Ref": "ProjectName"
                  },
                  "-",
                  {
                    "Ref": "Environment"
                  },
                  "-cdn",
                  {
                    "Fn::If": [
                      "NamingSuffixSet",
                      {
                        "Fn::Join": [
                          "",
                          [
                            "-",
                            {
                              "Ref": "NamingSuffix"
                            }
                          ]
                        ]
                      },
                      ""
                    ]
                  },
                  "-blocked-countries"
                ]
              ]
            },
            "Priority": 1,
            "Statement": {
              "GeoMatchStatement": {
                "CountryCodes": [
                  "AF",
                  "BR",
                  "CM",
                  "CN",
                  "DZ",
                  "ET",
                  "IQ",
                  "IR",
                  "KE",
                  "KP",
                  "KZ",
                  "LB",
                  "LY",
                  "MA",
                  "ML",
                  "NG",
                  "PK",
                  "PS",
                  "RO",
                  "RU",
                  "SO",
                  "SS",
                  "SY",
                  "TR",
                  "UA",
                  "UG",
                  "VE",
                  "YE"
                ]
              }
            },
            "VisibilityConfig": {
              "CloudWatchMetricsEnabled": true,
              "MetricName": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Ref": "ASI"
                    },
                    "-",
                    {
                      "Ref": "ProjectName"
                    },
                    "-",
                    {
                      "Ref": "Environment"
                    },
                    "-cdn",
                    {
                      "Fn::If": [
                        "NamingSuffixSet",
                        {
                          "Fn::Join": [
                            "",
                            [
                              "-",
                              {
                                "Ref": "NamingSuffix"
                              }
                            ]
                          ]
                        },
                        ""
                      ]
                    },
                    "-blocked-countries-metric"
                  ]
                ]
              },
              "SampledRequestsEnabled": true
            }
          },
          {
            "Name": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "ASI"
                  },
                  "-",
                  {
                    "Ref": "ProjectName"
                  },
                  "-",
                  {
                    "Ref": "Environment"
                  },
                  "-cdn",
                  {
                    "Fn::If": [
                      "NamingSuffixSet",
                      {
                        "Fn::Join": [
                          "",
                          [
                            "-",
                            {
                              "Ref": "NamingSuffix"
                            }
                          ]
                        ]
                      },
                      ""
                    ]
                  },
                  "AWSManagedRulesCommonRuleSet"
                ]
              ]
            },
            "OverrideAction": {
              "None": {}
            },
            "Priority": 2,
            "Statement": {
              "ManagedRuleGroupStatement": {
                "ExcludedRules": [
                  {
                    "Name": "SizeRestrictions_BODY"
                  }
                ],
                "Name": "AWSManagedRulesCommonRuleSet",
                "VendorName": "AWS"
              }
            },
            "VisibilityConfig": {
              "CloudWatchMetricsEnabled": true,
              "MetricName": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Ref": "ASI"
                    },
                    "-",
                    {
                      "Ref": "ProjectName"
                    },
                    "-",
                    {
                      "Ref": "Environment"
                    },
                    "-cdn",
                    {
                      "Fn::If": [
                        "NamingSuffixSet",
                        {
                          "Fn::Join": [
                            "",
                            [
                              "-",
                              {
                                "Ref": "NamingSuffix"
                              }
                            ]
                          ]
                        },
                        ""
                      ]
                    },
                    "AWSManagedRulesCommonRuleSet-metric"
                  ]
                ]
              },
              "SampledRequestsEnabled": true
            }
          },
          {
            "Name": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "ASI"
                  },
                  "-",
                  {
                    "Ref": "ProjectName"
                  },
                  "-",
                  {
                    "Ref": "Environment"
                  },
                  "-cdn",
                  {
                    "Fn::If": [
                      "NamingSuffixSet",
                      {
                        "Fn::Join": [
                          "",
                          [
                            "-",
                            {
                              "Ref": "NamingSuffix"
                            }
                          ]
                        ]
                      },
                      ""
                    ]
                  },
                  "AWSManagedRulesAdminProtectionRuleSet"
                ]
              ]
            },
            "OverrideAction": {
              "None": {}
            },
            "Priority": 3,
            "Statement": {
              "ManagedRuleGroupStatement": {
                "Name": "AWSManagedRulesAdminProtectionRuleSet",
                "VendorName": "AWS"
              }
            },
            "VisibilityConfig": {
              "CloudWatchMetricsEnabled": true,
              "MetricName": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Ref": "ASI"
                    },
                    "-",
                    {
                      "Ref": "ProjectName"
                    },
                    "-",
                    {
                      "Ref": "Environment"
                    },
                    "-cdn",
                    {
                      "Fn::If": [
                        "NamingSuffixSet",
                        {
                          "Fn::Join": [
                            "",
                            [
                              "-",
                              {
                                "Ref": "NamingSuffix"
                              }
                            ]
                          ]
                        },
                        ""
                      ]
                    },
                    "AWSManagedRulesAdminProtectionRuleSet-metric"
                  ]
                ]
              },
              "SampledRequestsEnabled": true
            }
          },
          {
            "Name": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "ASI"
                  },
                  "-",
                  {
                    "Ref": "ProjectName"
                  },
                  "-",
                  {
                    "Ref": "Environment"
                  },
                  "-cdn",
                  {
                    "Fn::If": [
                      "NamingSuffixSet",
                      {
                        "Fn::Join": [
                          "",
                          [
                            "-",
                            {
                              "Ref": "NamingSuffix"
                            }
                          ]
                        ]
                      },
                      ""
                    ]
                  },
                  "AWSManagedRulesKnownBadInputsRuleSet"
                ]
              ]
            },
            "OverrideAction": {
              "None": {}
            },
            "Priority": 4,
            "Statement": {
              "ManagedRuleGroupStatement": {
                "Name": "AWSManagedRulesKnownBadInputsRuleSet",
                "VendorName": "AWS"
              }
            },
            "VisibilityConfig": {
              "CloudWatchMetricsEnabled": true,
              "MetricName": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Ref": "ASI"
                    },
                    "-",
                    {
                      "Ref": "ProjectName"
                    },
                    "-",
                    {
                      "Ref": "Environment"
                    },
                    "-cdn",
                    {
                      "Fn::If": [
                        "NamingSuffixSet",
                        {
                          "Fn::Join": [
                            "",
                            [
                              "-",
                              {
                                "Ref": "NamingSuffix"
                              }
                            ]
                          ]
                        },
                        ""
                      ]
                    },
                    "AWSManagedRulesKnownBadInputsRuleSet-metric"
                  ]
                ]
              },
              "SampledRequestsEnabled": true
            }
          },
          {
            "Name": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "ASI"
                  },
                  "-",
                  {
                    "Ref": "ProjectName"
                  },
                  "-",
                  {
                    "Ref": "Environment"
                  },
                  "-cdn",
                  {
                    "Fn::If": [
                      "NamingSuffixSet",
                      {
                        "Fn::Join": [
                          "",
                          [
                            "-",
                            {
                              "Ref": "NamingSuffix"
                            }
                          ]
                        ]
                      },
                      ""
                    ]
                  },
                  "AWSManagedRulesAmazonIpReputationList"
                ]
              ]
            },
            "OverrideAction": {
              "None": {}
            },
            "Priority": 5,
            "Statement": {
              "ManagedRuleGroupStatement": {
                "Name": "AWSManagedRulesAmazonIpReputationList",
                "VendorName": "AWS"
              }
            },
            "VisibilityConfig": {
              "CloudWatchMetricsEnabled": true,
              "MetricName": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Ref": "ASI"
                    },
                    "-",
                    {
                      "Ref": "ProjectName"
                    },
                    "-",
                    {
                      "Ref": "Environment"
                    },
                    "-cdn",
                    {
                      "Fn::If": [
                        "NamingSuffixSet",
                        {
                          "Fn::Join": [
                            "",
                            [
                              "-",
                              {
                                "Ref": "NamingSuffix"
                              }
                            ]
                          ]
                        },
                        ""
                      ]
                    },
                    "AWSManagedRulesAmazonIpReputationList-metric"
                  ]
                ]
              },
              "SampledRequestsEnabled": true
            }
          },
          {
            "Action": {
              "Block": {}
            },
            "Name": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "ASI"
                  },
                  "-",
                  {
                    "Ref": "ProjectName"
                  },
                  "-",
                  {
                    "Ref": "Environment"
                  },
                  "-cdn",
                  {
                    "Fn::If": [
                      "NamingSuffixSet",
                      {
                        "Fn::Join": [
                          "",
                          [
                            "-",
                            {
                              "Ref": "NamingSuffix"
                            }
                          ]
                        ]
                      },
                      ""
                    ]
                  },
                  "-rate-limit"
                ]
              ]
            },
            "Priority": 6,
            "Statement": {
              "RateBasedStatement": {
                "AggregateKeyType": "IP",
                "Limit": 3000
              }
            },
            "VisibilityConfig": {
              "CloudWatchMetricsEnabled": true,
              "MetricName": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Ref": "ASI"
                    },
                    "-",
                    {
                      "Ref": "ProjectName"
                    },
                    "-",
                    {
                      "Ref": "Environment"
                    },
                    "-cdn",
                    {
                      "Fn::If": [
                        "NamingSuffixSet",
                        {
                          "Fn::Join": [
                            "",
                            [
                              "-",
                              {
                                "Ref": "NamingSuffix"
                              }
                            ]
                          ]
                        },
                        ""
                      ]
                    },
                    "-rate-limit-metric"
                  ]
                ]
              },
              "SampledRequestsEnabled": true
            }
          },
          {
            "Action": {
              "Block": {}
            },
            "Name": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "ASI"
                  },
                  "-",
                  {
                    "Ref": "ProjectName"
                  },
                  "-",
                  {
                    "Ref": "Environment"
                  },
                  "-cdn",
                  {
                    "Fn::If": [
                      "NamingSuffixSet",
                      {
                        "Fn::Join": [
                          "",
                          [
                            "-",
                            {
                              "Ref": "NamingSuffix"
                            }
                          ]
                        ]
                      },
                      ""
                    ]
                  }
                ]
              ]
            },
            "Priority": 7,
            "Statement": {
              "SizeConstraintStatement": {
                "ComparisonOperator": "GT",
                "FieldToMatch": {
                  "Body": {}
                },
                "Size": 8192,
                "TextTransformations": [
                  {
                    "Priority": 0,
                    "Type": "NONE"
                  }
                ]
              }
            },
            "VisibilityConfig": {
              "CloudWatchMetricsEnabled": true,
              "MetricName": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Ref": "ASI"
                    },
                    "-",
                    {
                      "Ref": "ProjectName"
                    },
                    "-",
                    {
                      "Ref": "Environment"
                    },
                    "-cdn",
                    {
                      "Fn::If": [
                        "NamingSuffixSet",
                        {
                          "Fn::Join": [
                            "",
                            [
                              "-",
                              {
                                "Ref": "NamingSuffix"
                              }
                            ]
                          ]
                        },
                        ""
                      ]
                    },
                    "-metric"
                  ]
                ]
              },
              "SampledRequestsEnabled": true
            }
          }
        ],
        "Tags": [
          {
            "Key": "asiName",
            "Value": "ABC"
          },
          {
            "Key": "projectName",
            "Value": "testProject"
          }
        ]
      }
    },
    "CloudfrontPublicApiWebDistributionWafLogDeliveryStreamRole571AEDED": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "firehose.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Path": "/",
        "RoleName": "aws-waf-logs-MyTestStack-c8d02d64b4e2a",
        "Tags": [
          {
            "Key": "asiName",
            "Value": "ABC"
          },
          {
            "Key": "projectName",
            "Value": "testProject"
          }
        ]
      }
    },
    "CloudfrontPublicApiWebDistributionWafLogDeliveryStreamRoleDefaultPolicy7225A3ED": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "kms:Decrypt",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudfrontPublicApiWebDistributionWafLogDeliveryStreamLogDeliveryStreamStreamCmk18048DE6",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "CloudfrontPublicApiWebDistributionWafLogDeliveryStreamRoleDefaultPolicy7225A3ED",
        "Roles": [
          {
            "Ref": "CloudfrontPublicApiWebDistributionWafLogDeliveryStreamRole571AEDED"
          }
        ]
      }
    },
    "CloudfrontPublicApiWebDistributionWafLogDeliveryStreamLogDeliveryStreamLogGroup0F1571BC": {
      "Type": "Custom::MooLogGroup",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "MooLogGroupProviderframeworkonEventFECEF8B7",
            "Arn"
          ]
        },
        "logGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/kinesisfirehose/aws-waf-logs-MyTestStack-c8d02d64b4e2a",
              {
                "Fn::If": [
                  "NamingSuffixSet",
                  {
                    "Fn::Join": [
                      "",
                      [
                        "-",
                        {
                          "Ref": "NamingSuffix"
                        }
                      ]
                    ]
                  },
                  ""
                ]
              }
            ]
          ]
        },
        "retention": 365,
        "logGroupEncryption": true,
        "kmsKeyAliasName": "alias/moo/logs/v1"
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain"
    },
    "CloudfrontPublicApiWebDistributionWafLogDeliveryStreamLogDeliveryStreamLogGroupLogDeliveryStreamMooLogStreamLogStreamProviderframeworkonEventServiceRoleE450136C": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ],
        "Tags": [
          {
            "Key": "asiName",
            "Value": "ABC"
          },
          {
            "Key": "cdkPath",
            "Value": "MyTestStack/CloudfrontPublicApi/WebDistributionWaf/LogDeliveryStream"
          },
          {
            "Key": "cfnLogicalId",
            "Value": "MyTestStackCloudfrontPublicApiWebDistributionWafLogDeliveryStream0CA8E88F"
          },
          {
            "Key": "cfnStack",
            "Value": "MyTestStack"
          },
          {
            "Key": "projectName",
            "Value": "testProject"
          }
        ]
      }
    },
    "CloudfrontPublicApiWebDistributionWafLogDeliveryStreamLogDeliveryStreamLogGroupLogDeliveryStreamMooLogStreamLogStreamProviderframeworkonEventServiceRoleDefaultPolicyC39AA8C9": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "SingletonLambda557d423fb9024b03bf7238dc848592a5F9DBF653",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "eryStreamLogDeliveryStreamLogGroupLogDeliveryStreamMooLogStreamLogStreamProviderframeworkonEventServiceRoleDefaultPolicyC39AA8C9",
        "Roles": [
          {
            "Ref": "CloudfrontPublicApiWebDistributionWafLogDeliveryStreamLogDeliveryStreamLogGroupLogDeliveryStreamMooLogStreamLogStreamProviderframeworkonEventServiceRoleE450136C"
          }
        ]
      }
    },
    "CloudfrontPublicApiWebDistributionWafLogDeliveryStreamLogDeliveryStreamLogGroupLogDeliveryStreamMooLogStreamLogStreamProviderframeworkonEventD0ED6646": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParameters-CDK_HASH_REMOVED"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters-CDK_HASH_REMOVED"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters-CDK_HASH_REMOVED"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "CloudfrontPublicApiWebDistributionWafLogDeliveryStreamLogDeliveryStreamLogGroupLogDeliveryStreamMooLogStreamLogStreamProviderframeworkonEventServiceRoleE450136C",
            "Arn"
          ]
        },
        "Description": "AWS CDK resource provider framework - onEvent (MyTestStack/CloudfrontPublicApi/WebDistributionWaf/LogDeliveryStream/LogDeliveryStreamLogGroup/LogDeliveryStreamMooLogStream/LogStreamProvider)",
        "Environment": {
          "Variables": {
            "USER_ON_EVENT_FUNCTION_ARN": {
              "Fn::GetAtt": [
                "SingletonLambda557d423fb9024b03bf7238dc848592a5F9DBF653",
                "Arn"
              ]
            }
          }
        },
        "Handler": "framework.onEvent",
        "Runtime": "nodejs12.x",
        "Tags": [
          {
            "Key": "asiName",
            "Value": "ABC"
          },
          {
            "Key": "cdkPath",
            "Value": "MyTestStack/CloudfrontPublicApi/WebDistributionWaf/LogDeliveryStream"
          },
          {
            "Key": "cfnLogicalId",
            "Value": "MyTestStackCloudfrontPublicApiWebDistributionWafLogDeliveryStream0CA8E88F"
          },
          {
            "Key": "cfnStack",
            "Value": "MyTestStack"
          },
          {
            "Key": "projectName",
            "Value": "testProject"
          }
        ],
        "Timeout": 900
      },
      "DependsOn": [
        "CloudfrontPublicApiWebDistributionWafLogDeliveryStreamLogDeliveryStreamLogGroupLogDeliveryStreamMooLogStreamLogStreamProviderframeworkonEventServiceRoleDefaultPolicyC39AA8C9",
        "CloudfrontPublicApiWebDistributionWafLogDeliveryStreamLogDeliveryStreamLogGroupLogDeliveryStreamMooLogStreamLogStreamProviderframeworkonEventServiceRoleE450136C"
      ]
    },
    "CloudfrontPublicApiWebDistributionWafLogDeliveryStreamLogDeliveryStreamLogGroupLogDeliveryStreamMooLogStreamLogStreamProviderframeworkonEventLogRetention7EA47087": {
      "Type": "Custom::LogRetention",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn"
          ]
        },
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "CloudfrontPublicApiWebDistributionWafLogDeliveryStreamLogDeliveryStreamLogGroupLogDeliveryStreamMooLogStreamLogStreamProviderframeworkonEventD0ED6646"
              }
            ]
          ]
        },
        "RetentionInDays": 90
      }
    },
    "CloudfrontPublicApiWebDistributionWafLogDeliveryStreamLogDeliveryStreamLogGroupLogDeliveryStreamMooLogStream75FD2369": {
      "Type": "Custom::MooLogStream",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CloudfrontPublicApiWebDistributionWafLogDeliveryStreamLogDeliveryStreamLogGroupLogDeliveryStreamMooLogStreamLogStreamProviderframeworkonEventD0ED6646",
            "Arn"
          ]
        },
        "logGroupName": {
          "Fn::GetAtt": [
            "CloudfrontPublicApiWebDistributionWafLogDeliveryStreamLogDeliveryStreamLogGroup0F1571BC",
            "logGroupName"
          ]
        },
        "logStreamName": "log-c8ff1d7b4e26c790436aa3d91d5b7fdf36d48737b8"
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain"
    },
    "CloudfrontPublicApiWebDistributionWafLogDeliveryStreamdeliveryStreamPolicy4FE025B8": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "logs:PutLogEvents",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudfrontPublicApiWebDistributionWafLogDeliveryStreamLogDeliveryStreamLogGroup0F1571BC",
                  "Arn"
                ]
              }
            },
            {
              "Action": [
                "s3:AbortMultipartUpload",
                "s3:GetBucketLocation",
                "s3:GetObject",
                "s3:ListBucket",
                "s3:ListBucketMultipartUploads",
                "s3:PutObject",
                "s3:PutObjectAcl"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::waflogs-",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      "-",
                      {
                        "Ref": "AWS::Region"
                      }
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::waflogs-",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      "-",
                      {
                        "Ref": "AWS::Region"
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "CloudfrontPublicApiWebDistributionWafLogDeliveryStreamdeliveryStreamPolicy4FE025B8",
        "Roles": [
          {
            "Ref": "CloudfrontPublicApiWebDistributionWafLogDeliveryStreamRole571AEDED"
          }
        ]
      }
    },
    "CloudfrontPublicApiWebDistributionWafLogDeliveryStreamLogDeliveryStreamStreamCmk18048DE6": {
      "Type": "AWS::KMS::Key",
      "Properties": {
        "KeyPolicy": {
          "Statement": [
            {
              "Action": [
                "kms:Create*",
                "kms:Describe*",
                "kms:Enable*",
                "kms:List*",
                "kms:Put*",
                "kms:Update*",
                "kms:Revoke*",
                "kms:Disable*",
                "kms:Get*",
                "kms:Delete*",
                "kms:ScheduleKeyDeletion",
                "kms:CancelKeyDeletion",
                "kms:GenerateDataKey",
                "kms:TagResource",
                "kms:UntagResource"
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":root"
                    ]
                  ]
                }
              },
              "Resource": "*"
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*"
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "CloudfrontPublicApiWebDistributionWafLogDeliveryStreamRole571AEDED",
                    "Arn"
                  ]
                }
              },
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "Description": "Managed key for MooDeliveryStream: aws-waf-logs-MyTestStack-c8d02d64b4e2a.",
        "EnableKeyRotation": true,
        "Tags": [
          {
            "Key": "asiName",
            "Value": "ABC"
          },
          {
            "Key": "cdkPath",
            "Value": "MyTestStack/CloudfrontPublicApi/WebDistributionWaf/LogDeliveryStream"
          },
          {
            "Key": "cfnLogicalId",
            "Value": "MyTestStackCloudfrontPublicApiWebDistributionWafLogDeliveryStream0CA8E88F"
          },
          {
            "Key": "cfnStack",
            "Value": "MyTestStack"
          },
          {
            "Key": "projectName",
            "Value": "testProject"
          }
        ]
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete"
    },
    "CloudfrontPublicApiWebDistributionWafLogDeliveryStream470B3B3F": {
      "Type": "AWS::KinesisFirehose::DeliveryStream",
      "Properties": {
        "DeliveryStreamEncryptionConfigurationInput": {
          "KeyARN": {
            "Fn::GetAtt": [
              "CloudfrontPublicApiWebDistributionWafLogDeliveryStreamLogDeliveryStreamStreamCmk18048DE6",
              "Arn"
            ]
          },
          "KeyType": "CUSTOMER_MANAGED_CMK"
        },
        "DeliveryStreamName": "aws-waf-logs-MyTestStack-c8d02d64b4e2a",
        "DeliveryStreamType": "DirectPut",
        "S3DestinationConfiguration": {
          "BucketARN": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":s3:::waflogs-",
                {
                  "Ref": "AWS::AccountId"
                },
                "-",
                {
                  "Ref": "AWS::Region"
                }
              ]
            ]
          },
          "BufferingHints": {
            "IntervalInSeconds": 300,
            "SizeInMBs": 5
          },
          "CloudWatchLoggingOptions": {
            "Enabled": true,
            "LogGroupName": {
              "Fn::GetAtt": [
                "CloudfrontPublicApiWebDistributionWafLogDeliveryStreamLogDeliveryStreamLogGroup0F1571BC",
                "logGroupName"
              ]
            },
            "LogStreamName": {
              "Fn::GetAtt": [
                "CloudfrontPublicApiWebDistributionWafLogDeliveryStreamLogDeliveryStreamLogGroupLogDeliveryStreamMooLogStream75FD2369",
                "logStreamName"
              ]
            }
          },
          "CompressionFormat": "UNCOMPRESSED",
          "Prefix": {
            "Fn::Join": [
              "",
              [
                {
                  "Ref": "ASI"
                },
                "-",
                {
                  "Ref": "ProjectName"
                },
                "-",
                {
                  "Ref": "Environment"
                },
                "-cdn",
                {
                  "Fn::If": [
                    "NamingSuffixSet",
                    {
                      "Fn::Join": [
                        "",
                        [
                          "-",
                          {
                            "Ref": "NamingSuffix"
                          }
                        ]
                      ]
                    },
                    ""
                  ]
                },
                "/"
              ]
            ]
          },
          "RoleARN": {
            "Fn::GetAtt": [
              "CloudfrontPublicApiWebDistributionWafLogDeliveryStreamRole571AEDED",
              "Arn"
            ]
          }
        },
        "Tags": [
          {
            "Key": "asiName",
            "Value": "ABC"
          },
          {
            "Key": "cdkPath",
            "Value": "MyTestStack/CloudfrontPublicApi/WebDistributionWaf/LogDeliveryStream"
          },
          {
            "Key": "cfnLogicalId",
            "Value": "MyTestStackCloudfrontPublicApiWebDistributionWafLogDeliveryStream0CA8E88F"
          },
          {
            "Key": "cfnStack",
            "Value": "MyTestStack"
          },
          {
            "Key": "projectName",
            "Value": "testProject"
          }
        ]
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete"
    },
    "CloudfrontPublicApiWebDistributionWafLogDeliveryStreamDeliveryToS3CreateDataFreshnessAlarmF4457B21": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ComparisonOperator": "GreaterThanThreshold",
        "EvaluationPeriods": 1,
        "AlarmActions": [
          {
            "Fn::Join": [
              "",
              [
                "arn:aws:sns:",
                {
                  "Ref": "AWS::Region"
                },
                ":",
                {
                  "Ref": "AWS::AccountId"
                },
                ":CriticalIncidentEventTopic"
              ]
            ]
          }
        ],
        "AlarmDescription": "Kinesis Delivery Stream aws-waf-logs-MyTestStack-c8d02d64b4e2a is showing the oldest record is Maximum\\n      of 900 or more seconds in the\\n      last 60 seconds.\\n      This is usually an indication of the stream not delivering and may require investigation.\\n      See {https://confluence.mutualofomaha.com/confluence/x/KAgxHw} for more information.",
        "AlarmName": {
          "Fn::Join": [
            "",
            [
              "aws-waf-logs-MyTestStack-c8d02d64b4e2a-data-freshness-exceeded",
              {
                "Fn::If": [
                  "NamingSuffixSet",
                  {
                    "Fn::Join": [
                      "",
                      [
                        "-",
                        {
                          "Ref": "NamingSuffix"
                        }
                      ]
                    ]
                  },
                  ""
                ]
              }
            ]
          ]
        },
        "DatapointsToAlarm": 1,
        "Dimensions": [
          {
            "Name": "DeliveryStreamName",
            "Value": "aws-waf-logs-MyTestStack-c8d02d64b4e2a"
          }
        ],
        "MetricName": "DeliveryToS3.DataFreshness",
        "Namespace": "AWS/Firehose",
        "Period": 60,
        "Statistic": "Maximum",
        "Threshold": 900,
        "TreatMissingData": "ignore"
      }
    },
    "CloudfrontPublicApiWebDistributionWafLogDeliveryStreamDeliveryToS3SuccessAlarm9044ED43": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ComparisonOperator": "LessThanThreshold",
        "EvaluationPeriods": 1,
        "AlarmActions": [
          {
            "Fn::Join": [
              "",
              [
                "arn:aws:sns:",
                {
                  "Ref": "AWS::Region"
                },
                ":",
                {
                  "Ref": "AWS::AccountId"
                },
                ":CriticalIncidentEventTopic"
              ]
            ]
          }
        ],
        "AlarmDescription": "Kinesis Delivery Stream aws-waf-logs-MyTestStack-c8d02d64b4e2a is showing a success rate Average of less than 1 (100%) in the\\n      last 60 seconds.\\n      This is usually an indication of the stream not delivering and may require investigation.\\n      See {https://confluence.mutualofomaha.com/confluence/x/KAgxHw} for more information.",
        "AlarmName": {
          "Fn::Join": [
            "",
            [
              "aws-waf-logs-MyTestStack-c8d02d64b4e2a-success-failure",
              {
                "Fn::If": [
                  "NamingSuffixSet",
                  {
                    "Fn::Join": [
                      "",
                      [
                        "-",
                        {
                          "Ref": "NamingSuffix"
                        }
                      ]
                    ]
                  },
                  ""
                ]
              }
            ]
          ]
        },
        "DatapointsToAlarm": 1,
        "Dimensions": [
          {
            "Name": "DeliveryStreamName",
            "Value": "aws-waf-logs-MyTestStack-c8d02d64b4e2a"
          }
        ],
        "MetricName": "DeliveryToS3.Success",
        "Namespace": "AWS/Firehose",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 1,
        "TreatMissingData": "ignore"
      }
    },
    "CloudfrontPublicApiWebDistributionWafProviderframeworkonEventServiceRole4685290E": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ],
        "Tags": [
          {
            "Key": "asiName",
            "Value": "ABC"
          },
          {
            "Key": "projectName",
            "Value": "testProject"
          }
        ]
      }
    },
    "CloudfrontPublicApiWebDistributionWafProviderframeworkonEventServiceRoleDefaultPolicyCB42A0D6": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "SingletonLambdamoowafv2loggingconfigurationhandler79FF7EC7",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "CloudfrontPublicApiWebDistributionWafProviderframeworkonEventServiceRoleDefaultPolicyCB42A0D6",
        "Roles": [
          {
            "Ref": "CloudfrontPublicApiWebDistributionWafProviderframeworkonEventServiceRole4685290E"
          }
        ]
      }
    },
    "CloudfrontPublicApiWebDistributionWafProviderframeworkonEventD7C213A1": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParameters-CDK_HASH_REMOVED"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters-CDK_HASH_REMOVED"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters-CDK_HASH_REMOVED"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "CloudfrontPublicApiWebDistributionWafProviderframeworkonEventServiceRole4685290E",
            "Arn"
          ]
        },
        "Description": "AWS CDK resource provider framework - onEvent (MyTestStack/CloudfrontPublicApi/WebDistributionWaf/Provider)",
        "Environment": {
          "Variables": {
            "USER_ON_EVENT_FUNCTION_ARN": {
              "Fn::GetAtt": [
                "SingletonLambdamoowafv2loggingconfigurationhandler79FF7EC7",
                "Arn"
              ]
            }
          }
        },
        "Handler": "framework.onEvent",
        "Runtime": "nodejs12.x",
        "Tags": [
          {
            "Key": "asiName",
            "Value": "ABC"
          },
          {
            "Key": "projectName",
            "Value": "testProject"
          }
        ],
        "Timeout": 900
      },
      "DependsOn": [
        "CloudfrontPublicApiWebDistributionWafProviderframeworkonEventServiceRoleDefaultPolicyCB42A0D6",
        "CloudfrontPublicApiWebDistributionWafProviderframeworkonEventServiceRole4685290E"
      ]
    },
    "CloudfrontPublicApiWebDistributionWafProviderframeworkonEventLogRetention1E6286E0": {
      "Type": "Custom::LogRetention",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn"
          ]
        },
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "CloudfrontPublicApiWebDistributionWafProviderframeworkonEventD7C213A1"
              }
            ]
          ]
        },
        "RetentionInDays": 90
      }
    },
    "CloudfrontPublicApiWebDistributionWafLoggingConfigF1A77DB1": {
      "Type": "Custom::WafLoggingConfiguration",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CloudfrontPublicApiWebDistributionWafProviderframeworkonEventD7C213A1",
            "Arn"
          ]
        },
        "LoggingConfiguration": {
          "LogDestinationConfigs": [
            {
              "Fn::GetAtt": [
                "CloudfrontPublicApiWebDistributionWafLogDeliveryStream470B3B3F",
                "Arn"
              ]
            }
          ],
          "ResourceArn": {
            "Fn::GetAtt": [
              "CloudfrontPublicApiWebDistributionWafA7E20BCC",
              "Arn"
            ]
          },
          "RedactedFields": [
            {
              "QueryString": {}
            }
          ]
        }
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete"
    },
    "CloudfrontPublicApiWebDistributionCFDistributionE486092A": {
      "Type": "AWS::CloudFront::Distribution",
      "Properties": {
        "DistributionConfig": {
          "Aliases": [
            {
              "Fn::If": [
                "isClass3Account",
                {
                  "Ref": "AWS::NoValue"
                },
                {
                  "Fn::GetAtt": [
                    "PublicCertificateDnsLookup3DFFA54D",
                    "FQDN"
                  ]
                }
              ]
            }
          ],
          "CacheBehaviors": [
            {
              "AllowedMethods": [
                "DELETE",
                "GET",
                "HEAD",
                "OPTIONS",
                "PATCH",
                "POST",
                "PUT"
              ],
              "CachedMethods": [
                "GET",
                "HEAD",
                "OPTIONS"
              ],
              "Compress": true,
              "DefaultTTL": 0,
              "ForwardedValues": {
                "Headers": [
                  "Accept",
                  "Referer",
                  "Authorization",
                  "Content-Type",
                  "Charset"
                ],
                "QueryString": true
              },
              "MaxTTL": 0,
              "MinTTL": 0,
              "PathPattern": {
                "Fn::Join": [
                  "",
                  [
                    "/",
                    {
                      "Ref": "RegionalApidefaultStageE594CEF8"
                    },
                    "/*"
                  ]
                ]
              },
              "TargetOriginId": "origin1",
              "ViewerProtocolPolicy": "https-only"
            }
          ],
          "DefaultCacheBehavior": {
            "AllowedMethods": [
              "GET",
              "HEAD"
            ],
            "CachedMethods": [
              "GET",
              "HEAD"
            ],
            "Compress": true,
            "ForwardedValues": {
              "Cookies": {
                "Forward": "none"
              },
              "QueryString": false
            },
            "TargetOriginId": "origin2",
            "ViewerProtocolPolicy": "https-only"
          },
          "DefaultRootObject": "index.html",
          "Enabled": true,
          "HttpVersion": "http2",
          "IPV6Enabled": true,
          "Logging": {
            "Bucket": {
              "Fn::Join": [
                "",
                [
                  "cloudfrontlogs-",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  "-",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".s3.us-east-1.",
                  {
                    "Ref": "AWS::URLSuffix"
                  }
                ]
              ]
            },
            "IncludeCookies": false
          },
          "Origins": [
            {
              "ConnectionAttempts": 3,
              "ConnectionTimeout": 10,
              "CustomOriginConfig": {
                "HTTPPort": 80,
                "HTTPSPort": 443,
                "OriginKeepaliveTimeout": 30,
                "OriginProtocolPolicy": "https-only",
                "OriginReadTimeout": 30,
                "OriginSSLProtocols": [
                  "TLSv1.2"
                ]
              },
              "DomainName": {
                "Fn::Select": [
                  2,
                  {
                    "Fn::Split": [
                      "/",
                      {
                        "Fn::Join": [
                          "",
                          [
                            "https://",
                            {
                              "Ref": "RegionalApi3AC391EF"
                            },
                            ".execute-api.us-east-1.",
                            {
                              "Ref": "AWS::URLSuffix"
                            },
                            "/",
                            {
                              "Ref": "RegionalApidefaultStageE594CEF8"
                            },
                            "/"
                          ]
                        ]
                      }
                    ]
                  }
                ]
              },
              "Id": "origin1",
              "OriginCustomHeaders": [
                {
                  "HeaderName": "x-source-cdn",
                  "HeaderValue": "6f697e91-a12d-552c-bb7a-22563bfbcd4c"
                }
              ]
            },
            {
              "ConnectionAttempts": 3,
              "ConnectionTimeout": 10,
              "DomainName": {
                "Fn::GetAtt": [
                  "WebBucket12880F5B",
                  "RegionalDomainName"
                ]
              },
              "Id": "origin2",
              "S3OriginConfig": {
                "OriginAccessIdentity": {
                  "Fn::Join": [
                    "",
                    [
                      "origin-access-identity/cloudfront/",
                      {
                        "Ref": "WebBucketIdentityF4F2C8B6"
                      }
                    ]
                  ]
                }
              }
            }
          ],
          "PriceClass": "PriceClass_100",
          "ViewerCertificate": {
            "Fn::If": [
              "isClass3Account",
              {
                "CloudFrontDefaultCertificate": true
              },
              {
                "AcmCertificateArn": {
                  "Fn::GetAtt": [
                    "PublicCertificateCertificateValidatorWaiter137C2BB7",
                    "certificateArn"
                  ]
                },
                "MinimumProtocolVersion": "TLSv1.2_2018",
                "SslSupportMethod": "sni-only"
              }
            ]
          },
          "WebACLId": {
            "Fn::GetAtt": [
              "CloudfrontPublicApiWebDistributionWafA7E20BCC",
              "Arn"
            ]
          }
        },
        "Tags": [
          {
            "Key": "asiName",
            "Value": "ABC"
          },
          {
            "Key": "projectName",
            "Value": "testProject"
          }
        ]
      },
      "DependsOn": [
        "RegionalApiAccount2945541F",
        "RegionalApiCloudWatchRole9CF7CDB2",
        "RegionalApihealthGET8C470D6E",
        "RegionalApihealthA4067BD5",
        "RegionalApihelloworldGETApiPermissionMyTestStackRegionalApi7F45B4FAGEThelloworldFF091B7E",
        "RegionalApihelloworldGETApiPermissionTestMyTestStackRegionalApi7F45B4FAGEThelloworld4BC438E8",
        "RegionalApihelloworldGET55A7C7C9",
        "RegionalApihelloworldB63E9C28",
        "RegionalApiusersGETApiPermissionMyTestStackRegionalApi7F45B4FAGETusers2F3878B3",
        "RegionalApiusersGETApiPermissionTestMyTestStackRegionalApi7F45B4FAGETusersB45F913F",
        "RegionalApiusersGETFB61EAE6",
        "RegionalApiusersPOSTApiPermissionMyTestStackRegionalApi7F45B4FAPOSTusers9F495DA2",
        "RegionalApiusersPOSTApiPermissionTestMyTestStackRegionalApi7F45B4FAPOSTusersA9FB18E9",
        "RegionalApiusersPOST263BB707",
        "RegionalApiusers3E724D61",
        "RegionalApidefaultStageE594CEF8",
        "RegionalApidefaultStageWebACLLogDeliveryStreamdeliveryStreamPolicy2073943B",
        "RegionalApidefaultStageWebACLLogDeliveryStreamDeliveryToS3CreateDataFreshnessAlarm19BD4BF6",
        "RegionalApidefaultStageWebACLLogDeliveryStreamDeliveryToS3SuccessAlarmD69D5496",
        "RegionalApidefaultStageWebACLLogDeliveryStreamLogDeliveryStreamLogGroup65718C15",
        "RegionalApidefaultStageWebACLLogDeliveryStreamLogDeliveryStreamLogGroupLogDeliveryStreamMooLogStreamLogStreamProviderframeworkonEventLogRetentionFA3EE31B",
        "RegionalApidefaultStageWebACLLogDeliveryStreamLogDeliveryStreamLogGroupLogDeliveryStreamMooLogStreamLogStreamProviderframeworkonEvent8616E9AE",
        "RegionalApidefaultStageWebACLLogDeliveryStreamLogDeliveryStreamLogGroupLogDeliveryStreamMooLogStreamLogStreamProviderframeworkonEventServiceRoleDefaultPolicy0E942E46",
        "RegionalApidefaultStageWebACLLogDeliveryStreamLogDeliveryStreamLogGroupLogDeliveryStreamMooLogStreamLogStreamProviderframeworkonEventServiceRoleDAF46A31",
        "RegionalApidefaultStageWebACLLogDeliveryStreamLogDeliveryStreamLogGroupLogDeliveryStreamMooLogStream6DD7C602",
        "RegionalApidefaultStageWebACLLogDeliveryStreamLogDeliveryStreamStreamCmk8CBB2A9A",
        "RegionalApidefaultStageWebACLLogDeliveryStream9023BDB6",
        "RegionalApidefaultStageWebACLLogDeliveryStreamRoleDefaultPolicy14BF1091",
        "RegionalApidefaultStageWebACLLogDeliveryStreamRoleA763471D",
        "RegionalApidefaultStageWebACLLoggingConfigD526C193",
        "RegionalApidefaultStageWebACLProviderframeworkonEventLogRetentionFAF119C9",
        "RegionalApidefaultStageWebACLProviderframeworkonEventE14F4745",
        "RegionalApidefaultStageWebACLProviderframeworkonEventServiceRoleDefaultPolicyD078F77E",
        "RegionalApidefaultStageWebACLProviderframeworkonEventServiceRole756567FE",
        "RegionalApidefaultStageWebACLF92404C3",
        "RegionalApidefaultStageWebACLWebACLAssociationBA3D4093",
        "RegionalApidefaultStageWebACLWebACLIpSet9E03A8FD",
        "RegionalApidefaultStageWebACLWebACLIpV6Set2C4038CB",
        "RegionalApidefaultStagelogC780E237",
        "RegionalApiRegionalApiclientApiKeyreq6977527EDAA69B",
        "RegionalApiRegionalApideploymentE8833D421191f783f8dccf94dc0a19db5e804506",
        "RegionalApiRegionalApiUsagePlanF1150C9C",
        "RegionalApiRegionalApiUsagePlanUsagePlanKeyResource722F3403",
        "RegionalApi3AC391EF",
        "RegionalApiRestAPIDefaultAlarm48A3A70E"
      ]
    },
    "CloudfrontPublicApiWebDistributionCFWebDistributionDefaultAlarm7949AE0A": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ComparisonOperator": "GreaterThanThreshold",
        "EvaluationPeriods": 5,
        "AlarmActions": [
          {
            "Fn::Join": [
              "",
              [
                "arn:aws:sns:",
                {
                  "Ref": "AWS::Region"
                },
                ":",
                {
                  "Ref": "AWS::AccountId"
                },
                ":CriticalIncidentEventTopic"
              ]
            ]
          }
        ],
        "AlarmDescription": {
          "Fn::Join": [
            "",
            [
              "CloudFront Web Distribution ",
              {
                "Ref": "CloudfrontPublicApiWebDistributionCFDistributionE486092A"
              },
              " has sent a Average\\n      of 25 or more Total Errors to the logs in the last the\\n      last 60 seconds.\\n      This is usually an indication of an increased error rate and/or a sustained failure of one or more backend resources.\\n      See {https://confluence.mutualofomaha.com/confluence/x/0QAmH} for more information."
            ]
          ]
        },
        "AlarmName": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "CloudfrontPublicApiWebDistributionCFDistributionE486092A"
              },
              "-total-error-rate",
              {
                "Fn::If": [
                  "NamingSuffixSet",
                  {
                    "Fn::Join": [
                      "",
                      [
                        "-",
                        {
                          "Ref": "NamingSuffix"
                        }
                      ]
                    ]
                  },
                  ""
                ]
              }
            ]
          ]
        },
        "DatapointsToAlarm": 5,
        "Dimensions": [
          {
            "Name": "cloudFrontWebDistributionId",
            "Value": {
              "Ref": "CloudfrontPublicApiWebDistributionCFDistributionE486092A"
            }
          }
        ],
        "MetricName": "TotalErrorRate",
        "Namespace": "AWS/Cloudfront",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 25,
        "TreatMissingData": "ignore"
      },
      "DependsOn": [
        "RegionalApiAccount2945541F",
        "RegionalApiCloudWatchRole9CF7CDB2",
        "RegionalApihealthGET8C470D6E",
        "RegionalApihealthA4067BD5",
        "RegionalApihelloworldGETApiPermissionMyTestStackRegionalApi7F45B4FAGEThelloworldFF091B7E",
        "RegionalApihelloworldGETApiPermissionTestMyTestStackRegionalApi7F45B4FAGEThelloworld4BC438E8",
        "RegionalApihelloworldGET55A7C7C9",
        "RegionalApihelloworldB63E9C28",
        "RegionalApiusersGETApiPermissionMyTestStackRegionalApi7F45B4FAGETusers2F3878B3",
        "RegionalApiusersGETApiPermissionTestMyTestStackRegionalApi7F45B4FAGETusersB45F913F",
        "RegionalApiusersGETFB61EAE6",
        "RegionalApiusersPOSTApiPermissionMyTestStackRegionalApi7F45B4FAPOSTusers9F495DA2",
        "RegionalApiusersPOSTApiPermissionTestMyTestStackRegionalApi7F45B4FAPOSTusersA9FB18E9",
        "RegionalApiusersPOST263BB707",
        "RegionalApiusers3E724D61",
        "RegionalApidefaultStageE594CEF8",
        "RegionalApidefaultStageWebACLLogDeliveryStreamdeliveryStreamPolicy2073943B",
        "RegionalApidefaultStageWebACLLogDeliveryStreamDeliveryToS3CreateDataFreshnessAlarm19BD4BF6",
        "RegionalApidefaultStageWebACLLogDeliveryStreamDeliveryToS3SuccessAlarmD69D5496",
        "RegionalApidefaultStageWebACLLogDeliveryStreamLogDeliveryStreamLogGroup65718C15",
        "RegionalApidefaultStageWebACLLogDeliveryStreamLogDeliveryStreamLogGroupLogDeliveryStreamMooLogStreamLogStreamProviderframeworkonEventLogRetentionFA3EE31B",
        "RegionalApidefaultStageWebACLLogDeliveryStreamLogDeliveryStreamLogGroupLogDeliveryStreamMooLogStreamLogStreamProviderframeworkonEvent8616E9AE",
        "RegionalApidefaultStageWebACLLogDeliveryStreamLogDeliveryStreamLogGroupLogDeliveryStreamMooLogStreamLogStreamProviderframeworkonEventServiceRoleDefaultPolicy0E942E46",
        "RegionalApidefaultStageWebACLLogDeliveryStreamLogDeliveryStreamLogGroupLogDeliveryStreamMooLogStreamLogStreamProviderframeworkonEventServiceRoleDAF46A31",
        "RegionalApidefaultStageWebACLLogDeliveryStreamLogDeliveryStreamLogGroupLogDeliveryStreamMooLogStream6DD7C602",
        "RegionalApidefaultStageWebACLLogDeliveryStreamLogDeliveryStreamStreamCmk8CBB2A9A",
        "RegionalApidefaultStageWebACLLogDeliveryStream9023BDB6",
        "RegionalApidefaultStageWebACLLogDeliveryStreamRoleDefaultPolicy14BF1091",
        "RegionalApidefaultStageWebACLLogDeliveryStreamRoleA763471D",
        "RegionalApidefaultStageWebACLLoggingConfigD526C193",
        "RegionalApidefaultStageWebACLProviderframeworkonEventLogRetentionFAF119C9",
        "RegionalApidefaultStageWebACLProviderframeworkonEventE14F4745",
        "RegionalApidefaultStageWebACLProviderframeworkonEventServiceRoleDefaultPolicyD078F77E",
        "RegionalApidefaultStageWebACLProviderframeworkonEventServiceRole756567FE",
        "RegionalApidefaultStageWebACLF92404C3",
        "RegionalApidefaultStageWebACLWebACLAssociationBA3D4093",
        "RegionalApidefaultStageWebACLWebACLIpSet9E03A8FD",
        "RegionalApidefaultStageWebACLWebACLIpV6Set2C4038CB",
        "RegionalApidefaultStagelogC780E237",
        "RegionalApiRegionalApiclientApiKeyreq6977527EDAA69B",
        "RegionalApiRegionalApideploymentE8833D421191f783f8dccf94dc0a19db5e804506",
        "RegionalApiRegionalApiUsagePlanF1150C9C",
        "RegionalApiRegionalApiUsagePlanUsagePlanKeyResource722F3403",
        "RegionalApi3AC391EF",
        "RegionalApiRestAPIDefaultAlarm48A3A70E"
      ]
    },
    "PublicCertificateDnsLookup3DFFA54D": {
      "Type": "Custom::MooDotComDnsRecord",
      "Properties": {
        "ServiceToken": {
          "Fn::Join": [
            "",
            [
              "arn:aws:sns:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Fn::If": [
                  "isClass3Account",
                  "019560164653",
                  "506949598203"
                ]
              },
              ":dns-registration-custom-resource-v2-topic"
            ]
          ]
        },
        "HostName": {
          "Fn::Join": [
            "",
            [
              "req69775",
              {
                "Fn::If": [
                  "NamingSuffixSet",
                  {
                    "Fn::Join": [
                      "",
                      [
                        "-",
                        {
                          "Ref": "NamingSuffix"
                        }
                      ]
                    ]
                  },
                  ""
                ]
              }
            ]
          ]
        },
        "CNAMETarget": "none",
        "Visibility": "NONE",
        "ForceOnDelete": false
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Condition": "NotisClass3Account"
    },
    "PublicCertificateSslCert28DB9DD6": {
      "Type": "AWS::CertificateManager::Certificate",
      "Properties": {
        "DomainName": {
          "Fn::GetAtt": [
            "PublicCertificateDnsLookup3DFFA54D",
            "FQDN"
          ]
        },
        "Tags": [
          {
            "Key": "asiName",
            "Value": "ABC"
          },
          {
            "Key": "projectName",
            "Value": "testProject"
          }
        ],
        "ValidationMethod": "DNS"
      },
      "Condition": "NotisClass3Account"
    },
    "PublicCertificateCertificateInfoProviderframeworkonEventServiceRole33762A00": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ],
        "Tags": [
          {
            "Key": "asiName",
            "Value": "ABC"
          },
          {
            "Key": "projectName",
            "Value": "testProject"
          }
        ]
      },
      "Condition": "NotisClass3Account"
    },
    "PublicCertificateCertificateInfoProviderframeworkonEventServiceRoleDefaultPolicy6AB5B0D3": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "SingletonLambdab3be8781d1de42f99b9f73b407a2f36e72DE3877",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "PublicCertificateCertificateInfoProviderframeworkonEventServiceRoleDefaultPolicy6AB5B0D3",
        "Roles": [
          {
            "Ref": "PublicCertificateCertificateInfoProviderframeworkonEventServiceRole33762A00"
          }
        ]
      },
      "Condition": "NotisClass3Account"
    },
    "PublicCertificateCertificateInfoProviderframeworkonEvent446D8770": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParameters-CDK_HASH_REMOVED"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters-CDK_HASH_REMOVED"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters-CDK_HASH_REMOVED"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "PublicCertificateCertificateInfoProviderframeworkonEventServiceRole33762A00",
            "Arn"
          ]
        },
        "Description": "AWS CDK resource provider framework - onEvent (MyTestStack/PublicCertificate/CertificateInfoProvider)",
        "Environment": {
          "Variables": {
            "USER_ON_EVENT_FUNCTION_ARN": {
              "Fn::GetAtt": [
                "SingletonLambdab3be8781d1de42f99b9f73b407a2f36e72DE3877",
                "Arn"
              ]
            }
          }
        },
        "Handler": "framework.onEvent",
        "Runtime": "nodejs12.x",
        "Tags": [
          {
            "Key": "asiName",
            "Value": "ABC"
          },
          {
            "Key": "projectName",
            "Value": "testProject"
          }
        ],
        "Timeout": 900
      },
      "DependsOn": [
        "PublicCertificateCertificateInfoProviderframeworkonEventServiceRoleDefaultPolicy6AB5B0D3",
        "PublicCertificateCertificateInfoProviderframeworkonEventServiceRole33762A00"
      ],
      "Condition": "NotisClass3Account"
    },
    "PublicCertificateCertificateDescriptionAF03B9BA": {
      "Type": "Custom::CertificateDescription",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "PublicCertificateCertificateInfoProviderframeworkonEvent446D8770",
            "Arn"
          ]
        },
        "certificateLogicalId": "PublicCertificateSslCert28DB9DD6",
        "stackName": {
          "Ref": "AWS::StackName"
        },
        "region": {
          "Ref": "AWS::Region"
        },
        "fqdn": {
          "Fn::GetAtt": [
            "PublicCertificateDnsLookup3DFFA54D",
            "FQDN"
          ]
        }
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Condition": "NotisClass3Account"
    },
    "PublicCertificateDnsCertificateValidationD39B57D6": {
      "Type": "Custom::MooDotComDnsRecord",
      "Properties": {
        "ServiceToken": {
          "Fn::Join": [
            "",
            [
              "arn:aws:sns:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Fn::If": [
                  "isClass3Account",
                  "019560164653",
                  "506949598203"
                ]
              },
              ":dns-registration-custom-resource-v2-topic"
            ]
          ]
        },
        "HostName": {
          "Fn::Join": [
            "",
            [
              {
                "Fn::GetAtt": [
                  "PublicCertificateCertificateDescriptionAF03B9BA",
                  "validationName"
                ]
              },
              ".req69775",
              {
                "Fn::If": [
                  "NamingSuffixSet",
                  {
                    "Fn::Join": [
                      "",
                      [
                        "-",
                        {
                          "Ref": "NamingSuffix"
                        }
                      ]
                    ]
                  },
                  ""
                ]
              }
            ]
          ]
        },
        "CNAMETarget": {
          "Fn::GetAtt": [
            "PublicCertificateCertificateDescriptionAF03B9BA",
            "validationValue"
          ]
        },
        "Visibility": "PUBLIC",
        "ForceOnDelete": false
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Condition": "NotisClass3Account"
    },
    "PublicCertificateValidationProviderframeworkonEventServiceRole72461B8D": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ],
        "Tags": [
          {
            "Key": "asiName",
            "Value": "ABC"
          },
          {
            "Key": "projectName",
            "Value": "testProject"
          }
        ]
      },
      "Condition": "NotisClass3Account"
    },
    "PublicCertificateValidationProviderframeworkonEventServiceRoleDefaultPolicy1165B43D": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "SingletonLambdab8587e73f8da4cd3996c81b412eb89fd909EE85F",
                  "Arn"
                ]
              }
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "SingletonLambda9c19ed08280d4ef09606d5e6cb3ceda72B6E34FD",
                  "Arn"
                ]
              }
            },
            {
              "Action": "states:StartExecution",
              "Effect": "Allow",
              "Resource": {
                "Ref": "PublicCertificateValidationProviderwaiterstatemachine94AAF37B"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "PublicCertificateValidationProviderframeworkonEventServiceRoleDefaultPolicy1165B43D",
        "Roles": [
          {
            "Ref": "PublicCertificateValidationProviderframeworkonEventServiceRole72461B8D"
          }
        ]
      },
      "Condition": "NotisClass3Account"
    },
    "PublicCertificateValidationProviderframeworkonEvent948188C5": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParameters-CDK_HASH_REMOVED"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters-CDK_HASH_REMOVED"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters-CDK_HASH_REMOVED"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "PublicCertificateValidationProviderframeworkonEventServiceRole72461B8D",
            "Arn"
          ]
        },
        "Description": "AWS CDK resource provider framework - onEvent (MyTestStack/PublicCertificate/ValidationProvider)",
        "Environment": {
          "Variables": {
            "USER_ON_EVENT_FUNCTION_ARN": {
              "Fn::GetAtt": [
                "SingletonLambdab8587e73f8da4cd3996c81b412eb89fd909EE85F",
                "Arn"
              ]
            },
            "USER_IS_COMPLETE_FUNCTION_ARN": {
              "Fn::GetAtt": [
                "SingletonLambda9c19ed08280d4ef09606d5e6cb3ceda72B6E34FD",
                "Arn"
              ]
            },
            "WAITER_STATE_MACHINE_ARN": {
              "Ref": "PublicCertificateValidationProviderwaiterstatemachine94AAF37B"
            }
          }
        },
        "Handler": "framework.onEvent",
        "Runtime": "nodejs12.x",
        "Tags": [
          {
            "Key": "asiName",
            "Value": "ABC"
          },
          {
            "Key": "projectName",
            "Value": "testProject"
          }
        ],
        "Timeout": 900
      },
      "DependsOn": [
        "PublicCertificateValidationProviderframeworkonEventServiceRoleDefaultPolicy1165B43D",
        "PublicCertificateValidationProviderframeworkonEventServiceRole72461B8D"
      ],
      "Condition": "NotisClass3Account"
    },
    "PublicCertificateValidationProviderframeworkisCompleteServiceRoleB7941000": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ],
        "Tags": [
          {
            "Key": "asiName",
            "Value": "ABC"
          },
          {
            "Key": "projectName",
            "Value": "testProject"
          }
        ]
      },
      "Condition": "NotisClass3Account"
    },
    "PublicCertificateValidationProviderframeworkisCompleteServiceRoleDefaultPolicyB5ACD4E5": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "SingletonLambdab8587e73f8da4cd3996c81b412eb89fd909EE85F",
                  "Arn"
                ]
              }
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "SingletonLambda9c19ed08280d4ef09606d5e6cb3ceda72B6E34FD",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "PublicCertificateValidationProviderframeworkisCompleteServiceRoleDefaultPolicyB5ACD4E5",
        "Roles": [
          {
            "Ref": "PublicCertificateValidationProviderframeworkisCompleteServiceRoleB7941000"
          }
        ]
      },
      "Condition": "NotisClass3Account"
    },
    "PublicCertificateValidationProviderframeworkisComplete7C03AEEA": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParameters-CDK_HASH_REMOVED"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters-CDK_HASH_REMOVED"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters-CDK_HASH_REMOVED"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "PublicCertificateValidationProviderframeworkisCompleteServiceRoleB7941000",
            "Arn"
          ]
        },
        "Description": "AWS CDK resource provider framework - isComplete (MyTestStack/PublicCertificate/ValidationProvider)",
        "Environment": {
          "Variables": {
            "USER_ON_EVENT_FUNCTION_ARN": {
              "Fn::GetAtt": [
                "SingletonLambdab8587e73f8da4cd3996c81b412eb89fd909EE85F",
                "Arn"
              ]
            },
            "USER_IS_COMPLETE_FUNCTION_ARN": {
              "Fn::GetAtt": [
                "SingletonLambda9c19ed08280d4ef09606d5e6cb3ceda72B6E34FD",
                "Arn"
              ]
            }
          }
        },
        "Handler": "framework.isComplete",
        "Runtime": "nodejs12.x",
        "Tags": [
          {
            "Key": "asiName",
            "Value": "ABC"
          },
          {
            "Key": "projectName",
            "Value": "testProject"
          }
        ],
        "Timeout": 900
      },
      "DependsOn": [
        "PublicCertificateValidationProviderframeworkisCompleteServiceRoleDefaultPolicyB5ACD4E5",
        "PublicCertificateValidationProviderframeworkisCompleteServiceRoleB7941000"
      ],
      "Condition": "NotisClass3Account"
    },
    "PublicCertificateValidationProviderframeworkonTimeoutServiceRoleA0E727AF": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ],
        "Tags": [
          {
            "Key": "asiName",
            "Value": "ABC"
          },
          {
            "Key": "projectName",
            "Value": "testProject"
          }
        ]
      },
      "Condition": "NotisClass3Account"
    },
    "PublicCertificateValidationProviderframeworkonTimeoutServiceRoleDefaultPolicy2A3628A3": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "SingletonLambdab8587e73f8da4cd3996c81b412eb89fd909EE85F",
                  "Arn"
                ]
              }
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "SingletonLambda9c19ed08280d4ef09606d5e6cb3ceda72B6E34FD",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "PublicCertificateValidationProviderframeworkonTimeoutServiceRoleDefaultPolicy2A3628A3",
        "Roles": [
          {
            "Ref": "PublicCertificateValidationProviderframeworkonTimeoutServiceRoleA0E727AF"
          }
        ]
      },
      "Condition": "NotisClass3Account"
    },
    "PublicCertificateValidationProviderframeworkonTimeoutB82A9F59": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParameters-CDK_HASH_REMOVED"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters-CDK_HASH_REMOVED"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters-CDK_HASH_REMOVED"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "PublicCertificateValidationProviderframeworkonTimeoutServiceRoleA0E727AF",
            "Arn"
          ]
        },
        "Description": "AWS CDK resource provider framework - onTimeout (MyTestStack/PublicCertificate/ValidationProvider)",
        "Environment": {
          "Variables": {
            "USER_ON_EVENT_FUNCTION_ARN": {
              "Fn::GetAtt": [
                "SingletonLambdab8587e73f8da4cd3996c81b412eb89fd909EE85F",
                "Arn"
              ]
            },
            "USER_IS_COMPLETE_FUNCTION_ARN": {
              "Fn::GetAtt": [
                "SingletonLambda9c19ed08280d4ef09606d5e6cb3ceda72B6E34FD",
                "Arn"
              ]
            }
          }
        },
        "Handler": "framework.onTimeout",
        "Runtime": "nodejs12.x",
        "Tags": [
          {
            "Key": "asiName",
            "Value": "ABC"
          },
          {
            "Key": "projectName",
            "Value": "testProject"
          }
        ],
        "Timeout": 900
      },
      "DependsOn": [
        "PublicCertificateValidationProviderframeworkonTimeoutServiceRoleDefaultPolicy2A3628A3",
        "PublicCertificateValidationProviderframeworkonTimeoutServiceRoleA0E727AF"
      ],
      "Condition": "NotisClass3Account"
    },
    "PublicCertificateValidationProviderwaiterstatemachineRole431817D8": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "states.us-east-1.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Tags": [
          {
            "Key": "asiName",
            "Value": "ABC"
          },
          {
            "Key": "projectName",
            "Value": "testProject"
          }
        ]
      },
      "Condition": "NotisClass3Account"
    },
    "PublicCertificateValidationProviderwaiterstatemachineRoleDefaultPolicy3FAFEDC7": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "PublicCertificateValidationProviderframeworkisComplete7C03AEEA",
                  "Arn"
                ]
              }
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "PublicCertificateValidationProviderframeworkonTimeoutB82A9F59",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "PublicCertificateValidationProviderwaiterstatemachineRoleDefaultPolicy3FAFEDC7",
        "Roles": [
          {
            "Ref": "PublicCertificateValidationProviderwaiterstatemachineRole431817D8"
          }
        ]
      },
      "Condition": "NotisClass3Account"
    },
    "PublicCertificateValidationProviderwaiterstatemachine94AAF37B": {
      "Type": "AWS::StepFunctions::StateMachine",
      "Properties": {
        "DefinitionString": {
          "Fn::Join": [
            "",
            [
              "{\\"StartAt\\":\\"framework-isComplete-task\\",\\"States\\":{\\"framework-isComplete-task\\":{\\"End\\":true,\\"Retry\\":[{\\"ErrorEquals\\":[\\"States.ALL\\"],\\"IntervalSeconds\\":30,\\"MaxAttempts\\":120,\\"BackoffRate\\":1}],\\"Catch\\":[{\\"ErrorEquals\\":[\\"States.ALL\\"],\\"Next\\":\\"framework-onTimeout-task\\"}],\\"Type\\":\\"Task\\",\\"Resource\\":\\"",
              {
                "Fn::GetAtt": [
                  "PublicCertificateValidationProviderframeworkisComplete7C03AEEA",
                  "Arn"
                ]
              },
              "\\"},\\"framework-onTimeout-task\\":{\\"End\\":true,\\"Type\\":\\"Task\\",\\"Resource\\":\\"",
              {
                "Fn::GetAtt": [
                  "PublicCertificateValidationProviderframeworkonTimeoutB82A9F59",
                  "Arn"
                ]
              },
              "\\"}}}"
            ]
          ]
        },
        "RoleArn": {
          "Fn::GetAtt": [
            "PublicCertificateValidationProviderwaiterstatemachineRole431817D8",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "PublicCertificateValidationProviderwaiterstatemachineRoleDefaultPolicy3FAFEDC7",
        "PublicCertificateValidationProviderwaiterstatemachineRole431817D8"
      ],
      "Condition": "NotisClass3Account"
    },
    "PublicCertificateCertificateValidatorWaiter137C2BB7": {
      "Type": "Custom::CertificateValidationWaiter",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "PublicCertificateValidationProviderframeworkonEvent948188C5",
            "Arn"
          ]
        },
        "CertificateArn": {
          "Fn::GetAtt": [
            "PublicCertificateCertificateDescriptionAF03B9BA",
            "certificateArn"
          ]
        }
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Condition": "NotisClass3Account"
    },
    "SingletonLambdab3be8781d1de42f99b9f73b407a2f36eServiceRoleE447EF3D": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ],
        "Tags": [
          {
            "Key": "asiName",
            "Value": "ABC"
          },
          {
            "Key": "projectName",
            "Value": "testProject"
          }
        ]
      },
      "Condition": "NotisClass3Account"
    },
    "SingletonLambdab3be8781d1de42f99b9f73b407a2f36eServiceRoleDefaultPolicy76EE31AF": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "acm:DescribeCertificate",
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "cloudformation:ListStackResources",
                "cloudformation:DescribeStacks"
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "AWS::StackId"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "SingletonLambdab3be8781d1de42f99b9f73b407a2f36eServiceRoleDefaultPolicy76EE31AF",
        "Roles": [
          {
            "Ref": "SingletonLambdab3be8781d1de42f99b9f73b407a2f36eServiceRoleE447EF3D"
          }
        ]
      },
      "Condition": "NotisClass3Account"
    },
    "SingletonLambdab3be8781d1de42f99b9f73b407a2f36e72DE3877": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParameters-CDK_HASH_REMOVED"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters-CDK_HASH_REMOVED"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters-CDK_HASH_REMOVED"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "SingletonLambdab3be8781d1de42f99b9f73b407a2f36eServiceRoleE447EF3D",
            "Arn"
          ]
        },
        "Handler": "handler-bundle.describeCertificate",
        "Runtime": "nodejs14.x",
        "Tags": [
          {
            "Key": "asiName",
            "Value": "ABC"
          },
          {
            "Key": "projectName",
            "Value": "testProject"
          }
        ],
        "Timeout": 120
      },
      "DependsOn": [
        "SingletonLambdab3be8781d1de42f99b9f73b407a2f36eServiceRoleDefaultPolicy76EE31AF",
        "SingletonLambdab3be8781d1de42f99b9f73b407a2f36eServiceRoleE447EF3D"
      ],
      "Condition": "NotisClass3Account"
    },
    "SingletonLambdab8587e73f8da4cd3996c81b412eb89fdServiceRole376286F1": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ],
        "Tags": [
          {
            "Key": "asiName",
            "Value": "ABC"
          },
          {
            "Key": "projectName",
            "Value": "testProject"
          }
        ]
      },
      "Condition": "NotisClass3Account"
    },
    "SingletonLambdab8587e73f8da4cd3996c81b412eb89fdServiceRoleDefaultPolicyB63706D5": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "acm:DescribeCertificate",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "PublicCertificateCertificateDescriptionAF03B9BA",
                  "certificateArn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "SingletonLambdab8587e73f8da4cd3996c81b412eb89fdServiceRoleDefaultPolicyB63706D5",
        "Roles": [
          {
            "Ref": "SingletonLambdab8587e73f8da4cd3996c81b412eb89fdServiceRole376286F1"
          }
        ]
      },
      "Condition": "NotisClass3Account"
    },
    "SingletonLambdab8587e73f8da4cd3996c81b412eb89fd909EE85F": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParameters-CDK_HASH_REMOVED"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters-CDK_HASH_REMOVED"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters-CDK_HASH_REMOVED"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "SingletonLambdab8587e73f8da4cd3996c81b412eb89fdServiceRole376286F1",
            "Arn"
          ]
        },
        "Handler": "handler-bundle.validateCertificate",
        "Runtime": "nodejs14.x",
        "Tags": [
          {
            "Key": "asiName",
            "Value": "ABC"
          },
          {
            "Key": "projectName",
            "Value": "testProject"
          }
        ],
        "Timeout": 120
      },
      "DependsOn": [
        "SingletonLambdab8587e73f8da4cd3996c81b412eb89fdServiceRoleDefaultPolicyB63706D5",
        "SingletonLambdab8587e73f8da4cd3996c81b412eb89fdServiceRole376286F1"
      ],
      "Condition": "NotisClass3Account"
    },
    "SingletonLambda9c19ed08280d4ef09606d5e6cb3ceda7ServiceRole4120A785": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ],
        "Tags": [
          {
            "Key": "asiName",
            "Value": "ABC"
          },
          {
            "Key": "projectName",
            "Value": "testProject"
          }
        ]
      },
      "Condition": "NotisClass3Account"
    },
    "SingletonLambda9c19ed08280d4ef09606d5e6cb3ceda7ServiceRoleDefaultPolicy370F9AFD": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "acm:DescribeCertificate",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "PublicCertificateCertificateDescriptionAF03B9BA",
                  "certificateArn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "SingletonLambda9c19ed08280d4ef09606d5e6cb3ceda7ServiceRoleDefaultPolicy370F9AFD",
        "Roles": [
          {
            "Ref": "SingletonLambda9c19ed08280d4ef09606d5e6cb3ceda7ServiceRole4120A785"
          }
        ]
      },
      "Condition": "NotisClass3Account"
    },
    "SingletonLambda9c19ed08280d4ef09606d5e6cb3ceda72B6E34FD": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParameters-CDK_HASH_REMOVED"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters-CDK_HASH_REMOVED"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters-CDK_HASH_REMOVED"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "SingletonLambda9c19ed08280d4ef09606d5e6cb3ceda7ServiceRole4120A785",
            "Arn"
          ]
        },
        "Handler": "handler-bundle.isValidateCertificateComplete",
        "Runtime": "nodejs14.x",
        "Tags": [
          {
            "Key": "asiName",
            "Value": "ABC"
          },
          {
            "Key": "projectName",
            "Value": "testProject"
          }
        ],
        "Timeout": 120
      },
      "DependsOn": [
        "SingletonLambda9c19ed08280d4ef09606d5e6cb3ceda7ServiceRoleDefaultPolicy370F9AFD",
        "SingletonLambda9c19ed08280d4ef09606d5e6cb3ceda7ServiceRole4120A785"
      ],
      "Condition": "NotisClass3Account"
    },
    "DnsRecord": {
      "Type": "Custom::MooDotComDnsRecord",
      "Properties": {
        "ServiceToken": {
          "Fn::Join": [
            "",
            [
              "arn:aws:sns:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Fn::If": [
                  "isClass3Account",
                  "019560164653",
                  "506949598203"
                ]
              },
              ":dns-registration-custom-resource-v2-topic"
            ]
          ]
        },
        "HostName": {
          "Fn::Join": [
            "",
            [
              "req69775",
              {
                "Fn::If": [
                  "NamingSuffixSet",
                  {
                    "Fn::Join": [
                      "",
                      [
                        "-",
                        {
                          "Ref": "NamingSuffix"
                        }
                      ]
                    ]
                  },
                  ""
                ]
              }
            ]
          ]
        },
        "CNAMETarget": {
          "Fn::GetAtt": [
            "CloudfrontPublicApiWebDistributionCFDistributionE486092A",
            "DomainName"
          ]
        },
        "Visibility": "PUBLIC",
        "ForceOnDelete": false
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Condition": "NotisClass3Account"
    },
    "DeployWithInvalidationAwsCliLayerDEDD5787": {
      "Type": "AWS::Lambda::LayerVersion",
      "Properties": {
        "Content": {
          "S3Bucket": {
            "Ref": "AssetParameters-CDK_HASH_REMOVED"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters-CDK_HASH_REMOVED"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters-CDK_HASH_REMOVED"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Description": "/opt/awscli/aws"
      }
    },
    "DeployWithInvalidationCustomResourceE3FF7455": {
      "Type": "Custom::CDKBucketDeployment",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536",
            "Arn"
          ]
        },
        "SourceBucketNames": [
          {
            "Ref": "AssetParameters-CDK_HASH_REMOVED"
          }
        ],
        "SourceObjectKeys": [
          {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters-CDK_HASH_REMOVED"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters-CDK_HASH_REMOVED"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        ],
        "DestinationBucketName": {
          "Ref": "WebBucket12880F5B"
        },
        "Prune": true,
        "DistributionId": {
          "Ref": "CloudfrontPublicApiWebDistributionCFDistributionE486092A"
        },
        "DistributionPaths": [
          "/*"
        ]
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete"
    },
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ],
        "Tags": [
          {
            "Key": "asiName",
            "Value": "ABC"
          },
          {
            "Key": "projectName",
            "Value": "testProject"
          }
        ]
      }
    },
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "AssetParameters-CDK_HASH_REMOVED"
                      }
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "AssetParameters-CDK_HASH_REMOVED"
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject*",
                "s3:Abort*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "WebBucket12880F5B",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "WebBucket12880F5B",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": [
                "cloudfront:GetInvalidation",
                "cloudfront:CreateInvalidation"
              ],
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF",
        "Roles": [
          {
            "Ref": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265"
          }
        ]
      }
    },
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParameters-CDK_HASH_REMOVED"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters-CDK_HASH_REMOVED"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters-CDK_HASH_REMOVED"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265",
            "Arn"
          ]
        },
        "Handler": "index.handler",
        "Layers": [
          {
            "Ref": "DeployWithInvalidationAwsCliLayerDEDD5787"
          }
        ],
        "Runtime": "python3.7",
        "Tags": [
          {
            "Key": "asiName",
            "Value": "ABC"
          },
          {
            "Key": "projectName",
            "Value": "testProject"
          }
        ],
        "Timeout": 900
      },
      "DependsOn": [
        "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF",
        "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265"
      ]
    },
    "UsersTable9725E9C8": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "KeySchema": [
          {
            "AttributeName": "userId",
            "KeyType": "HASH"
          }
        ],
        "AttributeDefinitions": [
          {
            "AttributeName": "userId",
            "AttributeType": "S"
          }
        ],
        "BillingMode": "PAY_PER_REQUEST",
        "PointInTimeRecoverySpecification": {
          "PointInTimeRecoveryEnabled": true
        },
        "SSESpecification": {
          "SSEEnabled": true
        },
        "TableName": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "ASI"
              },
              "-",
              {
                "Ref": "ProjectName"
              },
              "-",
              {
                "Ref": "Environment"
              },
              {
                "Fn::If": [
                  "NamingSuffixSet",
                  {
                    "Fn::Join": [
                      "",
                      [
                        "-",
                        {
                          "Ref": "NamingSuffix"
                        }
                      ]
                    ]
                  },
                  ""
                ]
              }
            ]
          ]
        },
        "Tags": [
          {
            "Key": "asiName",
            "Value": "ABC"
          },
          {
            "Key": "projectName",
            "Value": "testProject"
          }
        ]
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete"
    },
    "UsersTableDynamoDbDefaultAlarm1B8112F3": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "EvaluationPeriods": 1,
        "AlarmActions": [
          {
            "Fn::Join": [
              "",
              [
                "arn:aws:sns:",
                {
                  "Ref": "AWS::Region"
                },
                ":",
                {
                  "Ref": "AWS::AccountId"
                },
                ":CriticalIncidentEventTopic"
              ]
            ]
          }
        ],
        "AlarmDescription": {
          "Fn::Join": [
            "",
            [
              "The Dynamo DB Table ",
              {
                "Ref": "UsersTable9725E9C8"
              },
              " has sent a Sum\\n      of 1 or more System Errors to the logs in the\\n      last 60 seconds.\\n      This is usually an indication of a sustained failure of one or more backend resources.\\n      See {https://confluence.mutualofomaha.com/confluence/x/1wAmH} for more information."
            ]
          ]
        },
        "AlarmName": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "UsersTable9725E9C8"
              },
              "-dynamodb-system-errors",
              {
                "Fn::If": [
                  "NamingSuffixSet",
                  {
                    "Fn::Join": [
                      "",
                      [
                        "-",
                        {
                          "Ref": "NamingSuffix"
                        }
                      ]
                    ]
                  },
                  ""
                ]
              }
            ]
          ]
        },
        "Dimensions": [
          {
            "Name": "TableName",
            "Value": {
              "Ref": "UsersTable9725E9C8"
            }
          }
        ],
        "MetricName": "SystemErrors",
        "Namespace": "AWS/DynamoDB",
        "Period": 60,
        "Statistic": "Sum",
        "Threshold": 1,
        "TreatMissingData": "ignore"
      }
    },
    "GetUsersLambdaRoleA202B028": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ],
        "RoleName": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "ASI"
              },
              "-",
              {
                "Ref": "ProjectName"
              },
              "-",
              {
                "Ref": "Environment"
              },
              "-",
              {
                "Fn::FindInMap": [
                  "RegionMappings",
                  {
                    "Ref": "AWS::Region"
                  },
                  "shortCode"
                ]
              },
              "-getUsers",
              {
                "Fn::If": [
                  "NamingSuffixSet",
                  {
                    "Fn::Join": [
                      "",
                      [
                        "-",
                        {
                          "Ref": "NamingSuffix"
                        }
                      ]
                    ]
                  },
                  ""
                ]
              }
            ]
          ]
        },
        "Tags": [
          {
            "Key": "asiName",
            "Value": "ABC"
          },
          {
            "Key": "projectName",
            "Value": "testProject"
          }
        ]
      }
    },
    "GetUsersLambdaRoleDefaultPolicy035B17D1": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "UsersTable9725E9C8",
                    "Arn"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "GetUsersLambdaRoleDefaultPolicy035B17D1",
        "Roles": [
          {
            "Ref": "GetUsersLambdaRoleA202B028"
          }
        ]
      }
    },
    "GetUsersLambda4ACBBAFD": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParameters-CDK_HASH_REMOVED"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters-CDK_HASH_REMOVED"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters-CDK_HASH_REMOVED"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "GetUsersLambdaRoleA202B028",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "TABLE_NAME": {
              "Ref": "UsersTable9725E9C8"
            }
          }
        },
        "FunctionName": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "ASI"
              },
              "-",
              {
                "Ref": "ProjectName"
              },
              "-",
              {
                "Ref": "Environment"
              },
              "-getUsers",
              {
                "Fn::If": [
                  "NamingSuffixSet",
                  {
                    "Fn::Join": [
                      "",
                      [
                        "-",
                        {
                          "Ref": "NamingSuffix"
                        }
                      ]
                    ]
                  },
                  ""
                ]
              }
            ]
          ]
        },
        "Handler": "get-users-lambda.handler",
        "Runtime": "nodejs14.x",
        "Tags": [
          {
            "Key": "asiName",
            "Value": "ABC"
          },
          {
            "Key": "projectName",
            "Value": "testProject"
          }
        ],
        "TracingConfig": {
          "Mode": "Active"
        }
      },
      "DependsOn": [
        "GetUsersLambdaRoleDefaultPolicy035B17D1",
        "GetUsersLambdaRoleA202B028"
      ]
    },
    "GetUsersLambdaLambdaDefaultAlarmB98CBFD9": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ComparisonOperator": "GreaterThanThreshold",
        "EvaluationPeriods": 1,
        "AlarmActions": [
          {
            "Fn::Join": [
              "",
              [
                "arn:aws:sns:",
                {
                  "Ref": "AWS::Region"
                },
                ":",
                {
                  "Ref": "AWS::AccountId"
                },
                ":CriticalIncidentEventTopic"
              ]
            ]
          }
        ],
        "AlarmDescription": {
          "Fn::Join": [
            "",
            [
              "Lambda ",
              {
                "Ref": "GetUsersLambda4ACBBAFD"
              },
              " has sent 0 or greater\\n      percentage of errors to successful completions in the last 60 seconds.\\n      This is usually an indication of a sustained failure of a lambda function.\\n      See {https://confluence.mutualofomaha.com/confluence/x/4AAmH} for more information."
            ]
          ]
        },
        "AlarmName": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "GetUsersLambda4ACBBAFD"
              },
              "-error-rate"
            ]
          ]
        },
        "Metrics": [
          {
            "Expression": "(errors/invocations)*100",
            "Id": "expr_1"
          },
          {
            "Id": "errors",
            "MetricStat": {
              "Metric": {
                "Dimensions": [
                  {
                    "Name": "FunctionName",
                    "Value": {
                      "Ref": "GetUsersLambda4ACBBAFD"
                    }
                  }
                ],
                "MetricName": "Errors",
                "Namespace": "AWS/Lambda"
              },
              "Period": 300,
              "Stat": "Sum"
            },
            "ReturnData": false
          },
          {
            "Id": "invocations",
            "MetricStat": {
              "Metric": {
                "Dimensions": [
                  {
                    "Name": "FunctionName",
                    "Value": {
                      "Ref": "GetUsersLambda4ACBBAFD"
                    }
                  }
                ],
                "MetricName": "Invocations",
                "Namespace": "AWS/Lambda"
              },
              "Period": 300,
              "Stat": "Sum"
            },
            "ReturnData": false
          }
        ],
        "Threshold": 0,
        "TreatMissingData": "ignore"
      }
    },
    "GetUsersLambdaLG": {
      "Type": "Custom::MooLogGroup",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "MooLogGroupProviderframeworkonEventFECEF8B7",
            "Arn"
          ]
        },
        "logGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "GetUsersLambda4ACBBAFD"
              }
            ]
          ]
        },
        "retention": 365,
        "logGroupEncryption": true,
        "kmsKeyAliasName": "alias/moo/logs/v1"
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain"
    },
    "AddUserLambdaRoleFAA2A9B0": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ],
        "RoleName": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "ASI"
              },
              "-",
              {
                "Ref": "ProjectName"
              },
              "-",
              {
                "Ref": "Environment"
              },
              "-",
              {
                "Fn::FindInMap": [
                  "RegionMappings",
                  {
                    "Ref": "AWS::Region"
                  },
                  "shortCode"
                ]
              },
              "-addUser",
              {
                "Fn::If": [
                  "NamingSuffixSet",
                  {
                    "Fn::Join": [
                      "",
                      [
                        "-",
                        {
                          "Ref": "NamingSuffix"
                        }
                      ]
                    ]
                  },
                  ""
                ]
              }
            ]
          ]
        },
        "Tags": [
          {
            "Key": "asiName",
            "Value": "ABC"
          },
          {
            "Key": "projectName",
            "Value": "testProject"
          }
        ]
      }
    },
    "AddUserLambdaRoleDefaultPolicyE3A8A87D": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "UsersTable9725E9C8",
                    "Arn"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "AddUserLambdaRoleDefaultPolicyE3A8A87D",
        "Roles": [
          {
            "Ref": "AddUserLambdaRoleFAA2A9B0"
          }
        ]
      }
    },
    "AddUserLambda610F123B": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParameters-CDK_HASH_REMOVED"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters-CDK_HASH_REMOVED"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters-CDK_HASH_REMOVED"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "AddUserLambdaRoleFAA2A9B0",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "TABLE_NAME": {
              "Ref": "UsersTable9725E9C8"
            }
          }
        },
        "FunctionName": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "ASI"
              },
              "-",
              {
                "Ref": "ProjectName"
              },
              "-",
              {
                "Ref": "Environment"
              },
              "-addUser",
              {
                "Fn::If": [
                  "NamingSuffixSet",
                  {
                    "Fn::Join": [
                      "",
                      [
                        "-",
                        {
                          "Ref": "NamingSuffix"
                        }
                      ]
                    ]
                  },
                  ""
                ]
              }
            ]
          ]
        },
        "Handler": "add-user-lambda.handler",
        "Runtime": "nodejs14.x",
        "Tags": [
          {
            "Key": "asiName",
            "Value": "ABC"
          },
          {
            "Key": "projectName",
            "Value": "testProject"
          }
        ],
        "TracingConfig": {
          "Mode": "Active"
        }
      },
      "DependsOn": [
        "AddUserLambdaRoleDefaultPolicyE3A8A87D",
        "AddUserLambdaRoleFAA2A9B0"
      ]
    },
    "AddUserLambdaLambdaDefaultAlarm83DD38D6": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ComparisonOperator": "GreaterThanThreshold",
        "EvaluationPeriods": 1,
        "AlarmActions": [
          {
            "Fn::Join": [
              "",
              [
                "arn:aws:sns:",
                {
                  "Ref": "AWS::Region"
                },
                ":",
                {
                  "Ref": "AWS::AccountId"
                },
                ":CriticalIncidentEventTopic"
              ]
            ]
          }
        ],
        "AlarmDescription": {
          "Fn::Join": [
            "",
            [
              "Lambda ",
              {
                "Ref": "AddUserLambda610F123B"
              },
              " has sent 0 or greater\\n      percentage of errors to successful completions in the last 60 seconds.\\n      This is usually an indication of a sustained failure of a lambda function.\\n      See {https://confluence.mutualofomaha.com/confluence/x/4AAmH} for more information."
            ]
          ]
        },
        "AlarmName": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "AddUserLambda610F123B"
              },
              "-error-rate"
            ]
          ]
        },
        "Metrics": [
          {
            "Expression": "(errors/invocations)*100",
            "Id": "expr_1"
          },
          {
            "Id": "errors",
            "MetricStat": {
              "Metric": {
                "Dimensions": [
                  {
                    "Name": "FunctionName",
                    "Value": {
                      "Ref": "AddUserLambda610F123B"
                    }
                  }
                ],
                "MetricName": "Errors",
                "Namespace": "AWS/Lambda"
              },
              "Period": 300,
              "Stat": "Sum"
            },
            "ReturnData": false
          },
          {
            "Id": "invocations",
            "MetricStat": {
              "Metric": {
                "Dimensions": [
                  {
                    "Name": "FunctionName",
                    "Value": {
                      "Ref": "AddUserLambda610F123B"
                    }
                  }
                ],
                "MetricName": "Invocations",
                "Namespace": "AWS/Lambda"
              },
              "Period": 300,
              "Stat": "Sum"
            },
            "ReturnData": false
          }
        ],
        "Threshold": 0,
        "TreatMissingData": "ignore"
      }
    },
    "AddUserLambdaLG": {
      "Type": "Custom::MooLogGroup",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "MooLogGroupProviderframeworkonEventFECEF8B7",
            "Arn"
          ]
        },
        "logGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "AddUserLambda610F123B"
              }
            ]
          ]
        },
        "retention": 365,
        "logGroupEncryption": true,
        "kmsKeyAliasName": "alias/moo/logs/v1"
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain"
    }
  },
  "Parameters": {
    "ASI": {
      "Type": "String",
      "Default": "abc",
      "AllowedPattern": "^[a-z0-9]+$",
      "Description": "ASI associated with the stack"
    },
    "ProjectName": {
      "Type": "String",
      "Default": "testproject",
      "AllowedPattern": "^[a-z0-9.-]+$",
      "Description": "Name of the project being deployed"
    },
    "Environment": {
      "Type": "String",
      "Default": "sbx",
      "AllowedValues": [
        "sbx",
        "dev",
        "itg",
        "cat",
        "prod"
      ],
      "Description": "Name of the environment being deployed"
    },
    "NamingSuffix": {
      "Type": "String",
      "Default": "",
      "AllowedPattern": "^[a-z0-9.-]*$",
      "Description": "Suffix to append to resource names to allow for stack to be deployed to an account multiple times"
    },
    "AssetParameters-CDK_HASH_REMOVED": {
      "Type": "String",
      "Description": "CDK_HASH_REMOVED"
    }
  },
  "Conditions": {
    "NamingSuffixSet": {
      "Fn::Not": [
        {
          "Fn::Equals": [
            {
              "Ref": "NamingSuffix"
            },
            ""
          ]
        }
      ]
    },
    "isClass1Account": {
      "Fn::Equals": [
        {
          "Fn::FindInMap": [
            "AccountClassMap",
            {
              "Ref": "Environment"
            },
            "accountClass"
          ]
        },
        "CLASS1"
      ]
    },
    "isClass2Account": {
      "Fn::Equals": [
        {
          "Fn::FindInMap": [
            "AccountClassMap",
            {
              "Ref": "Environment"
            },
            "accountClass"
          ]
        },
        "CLASS2"
      ]
    },
    "isClass3Account": {
      "Fn::Equals": [
        {
          "Fn::FindInMap": [
            "AccountClassMap",
            {
              "Ref": "Environment"
            },
            "accountClass"
          ]
        },
        "CLASS3"
      ]
    },
    "NotisClass3Account": {
      "Fn::Not": [
        {
          "Fn::Equals": [
            {
              "Fn::FindInMap": [
                "AccountClassMap",
                {
                  "Ref": "Environment"
                },
                "accountClass"
              ]
            },
            "CLASS3"
          ]
        }
      ]
    }
  },
  "Mappings": {
    "RegionMappings": {
      "us-east-1": {
        "shortCode": "use1"
      },
      "us-east-2": {
        "shortCode": "use2"
      },
      "us-west-1": {
        "shortCode": "usw1"
      },
      "us-west-2": {
        "shortCode": "usw2"
      },
      "ca-central-1": {
        "shortCode": "cac1"
      }
    },
    "AccountClassMap": {
      "sbx": {
        "accountClass": "CLASS3"
      },
      "dev": {
        "accountClass": "CLASS2"
      },
      "itg": {
        "accountClass": "CLASS2"
      },
      "cat": {
        "accountClass": "CLASS1"
      },
      "prod": {
        "accountClass": "CLASS1"
      }
    }
  },
  "Outputs": {
    "RegionalApiRegionalApiEndpoint8FEC55F7": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "RegionalApi3AC391EF"
            },
            ".execute-api.us-east-1.",
            {
              "Ref": "AWS::URLSuffix"
            },
            "/",
            {
              "Ref": "RegionalApidefaultStageE594CEF8"
            },
            "/"
          ]
        ]
      }
    },
    "CloudfrontPublicApiCdnFqdn": {
      "Description": "Moo full DNS Name for cloudfront distribution",
      "Value": {
        "Fn::GetAtt": [
          "DnsRecord",
          "FQDN"
        ]
      },
      "Condition": "NotisClass3Account"
    },
    "CloudfrontPublicApiCdnEndpointApi": {
      "Description": "Moo API Endpoint url",
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Fn::GetAtt": [
                "CloudfrontPublicApiWebDistributionCFDistributionE486092A",
                "DomainName"
              ]
            },
            "/",
            {
              "Ref": "RegionalApidefaultStageE594CEF8"
            },
            "/"
          ]
        ]
      },
      "Condition": "NotisClass3Account"
    },
    "ExportsOutputRefRegionalApi3AC391EF71296615": {
      "Value": {
        "Ref": "RegionalApi3AC391EF"
      },
      "Export": {
        "Name": "MyTestStack:ExportsOutputRefRegionalApi3AC391EF71296615"
      }
    },
    "ExportsOutputRefRegionalApidefaultStageE594CEF842E3F474": {
      "Value": {
        "Ref": "RegionalApidefaultStageE594CEF8"
      },
      "Export": {
        "Name": "MyTestStack:ExportsOutputRefRegionalApidefaultStageE594CEF842E3F474"
      }
    }
  }
}
`;
